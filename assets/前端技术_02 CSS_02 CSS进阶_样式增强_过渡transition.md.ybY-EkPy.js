import{_ as s,c as a,o as n,ae as t}from"./chunks/framework.CIivgcbp.js";const c=JSON.parse('{"title":"过渡 transition","description":"","frontmatter":{},"headers":[],"relativePath":"前端技术/02 CSS/02 CSS进阶/样式增强/过渡transition.md","filePath":"前端技术/02 CSS/02 CSS进阶/样式增强/过渡transition.md"}'),e={name:"前端技术/02 CSS/02 CSS进阶/样式增强/过渡transition.md"};function l(p,i,r,h,o,k){return n(),a("div",null,i[0]||(i[0]=[t(`<h1 id="过渡-transition" tabindex="-1">过渡 transition <a class="header-anchor" href="#过渡-transition" aria-label="Permalink to &quot;过渡 transition&quot;">​</a></h1><p>CSS 过渡允许您在给定的时间内平滑地改变属性值。</p><h2 id="transition-的使用" tabindex="-1">transition 的使用 <a class="header-anchor" href="#transition-的使用" aria-label="Permalink to &quot;transition 的使用&quot;">​</a></h2><ul><li><p><code>transition</code> 简写属性，用于在一个属性中设置四个过渡属性。<br><code>transition: property duration timingfn delay;</code><br> 如果需改变若干属性值，使用，分隔</p></li><li><p><code>transition-property</code> 规定应用过渡的 CSS 属性的名称。</p><ul><li>none: 没有属性获得过渡效果</li><li>all: 所有属性获得过渡效果</li><li>property (指定的属性)</li></ul></li><li><p><code>transition-duration</code> 定义过渡效果花费的时间。默认是 0。</p><ul><li>time: 单位为 s 或 ms</li></ul></li><li><p><code>transition-timing-function</code> 规定过渡效果的时间曲线。默认是 &quot;ease&quot;。</p><ul><li>linear: 线性速度 （等于 cubic-bezier(0,0,1,1)）</li><li>ease: 慢 - 快 - 慢 （cubic-bezier(0.25,0.1,0.25,1)）</li><li>ease-in：以慢速开始（等于 cubic-bezier (0.42,0,1,1)）</li><li>ease-out：以慢速结束（等于 cubic-bezier(0,0,0.58,1)）</li><li>ease-in-out：以慢速开始和结束的过渡效果（等于 cubic-bezier(0.42,0,0.58,1)）</li><li>cubic-bezier(<em>n</em>,<em>n</em>,<em>n</em>,<em>n</em>) 函数<br> 三次贝塞尔曲线由 P0、P1、P2 和 P3 四个点进行定义。P0 和 P3 是曲线的起点和终点，在 CSS 中，这两个点是固定的，因为坐标是成比例。P0 为 (0, 0)，代表初始时间和初始状态，P3 为 (1, 1)，代表最终时间和最终状态。</li></ul></li><li><p><code>transition-delay</code> 规定过渡效果何时开始。默认是 0。</p><ul><li>time: 单位为 s 或 ms</li></ul></li></ul><p>例子</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">all</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> linear</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*多个逗号分隔*/</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: width </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,height </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,6)]))}const u=s(e,[["render",l]]);export{c as __pageData,u as default};
