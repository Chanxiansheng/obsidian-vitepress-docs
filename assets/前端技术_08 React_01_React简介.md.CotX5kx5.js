import{_ as e,c as l,o as t,ag as i}from"./chunks/framework.-ewJmwvT.js";const p=JSON.parse('{"title":"01_React 简介","description":"","frontmatter":{},"headers":[],"relativePath":"前端技术/08 React/01_React简介.md","filePath":"前端技术/08 React/01_React简介.md"}'),r={name:"前端技术/08 React/01_React简介.md"};function c(o,a,s,n,_,h){return t(),l("div",null,a[0]||(a[0]=[i('<h1 id="_01-react-简介" tabindex="-1">01_React 简介 <a class="header-anchor" href="#_01-react-简介" aria-label="Permalink to &quot;01_React 简介&quot;">​</a></h1><div class="note custom-block github-alert"><p class="custom-block-title">Title</p><p></p><ul><li><a href="https://react.docschina.org/" target="_blank" rel="noreferrer">React 官方中文文档</a></li><li><a href="https://www.bilibili.com/video/BV1wy4y1D7JT/?p=1" target="_blank" rel="noreferrer">尚硅谷React教程第一集(B站)</a></li></ul></div><h2 id="一、什么是-react" tabindex="-1">一、什么是 React？ <a class="header-anchor" href="#一、什么是-react" aria-label="Permalink to &quot;一、什么是 React？&quot;">​</a></h2><ul><li><p>React 是一个用于构建用户界面的 Javascript 库。</p><ol><li>发送请求获取数据</li><li>处理数据（过滤、整理格式等）</li><li>操作 DOM 呈现页面</li></ol></li><li><p>由 Facebook 开发，开源</p></li></ul><h2 id="二、为什么学" tabindex="-1">二、为什么学？ <a class="header-anchor" href="#二、为什么学" aria-label="Permalink to &quot;二、为什么学？&quot;">​</a></h2><ol><li>原生 Javascript 操作 DOM 繁琐，效率低</li><li>直接操作 DOM 会使大量的==重绘重排==</li><li>原生 Javascript 没有==组件化==编码方案，代码复用率低</li></ol><h2 id="三、react-的特点" tabindex="-1">三、React 的特点 <a class="header-anchor" href="#三、react-的特点" aria-label="Permalink to &quot;三、React 的特点&quot;">​</a></h2><ol><li>采用组件化模式、==声明式编码==，提高开发效率及组件复用率。</li><li>在 React Native 中可以使用 Recat 语法进行==移动端开发==。</li><li>使用==虚拟 DOM==+ 优秀的==Diffing 算法==，尽量减少与真实 DOM 的交互。</li></ol><h2 id="四、前置知识" tabindex="-1">四、前置知识 <a class="header-anchor" href="#四、前置知识" aria-label="Permalink to &quot;四、前置知识&quot;">​</a></h2><ol><li>this 指向</li><li>class</li><li>ES6</li><li>npm</li><li>原型</li><li>数组</li><li>模块化</li></ol>',10)]))}const u=e(r,[["render",c]]);export{p as __pageData,u as default};
