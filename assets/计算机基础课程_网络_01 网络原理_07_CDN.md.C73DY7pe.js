import{_ as e,c as a,o as r,ag as o}from"./chunks/framework.-ewJmwvT.js";const C=JSON.parse('{"title":"CDN","description":"","frontmatter":{},"headers":[],"relativePath":"计算机基础课程/网络/01 网络原理/07_CDN.md","filePath":"计算机基础课程/网络/01 网络原理/07_CDN.md"}'),n={name:"计算机基础课程/网络/01 网络原理/07_CDN.md"};function i(l,t,_,s,p,N){return r(),a("div",null,t[0]||(t[0]=[o('<h1 id="cdn" tabindex="-1">CDN <a class="header-anchor" href="#cdn" aria-label="Permalink to &quot;CDN&quot;">​</a></h1><p>CDN的全称是<strong>Content Delivery Network</strong>，即<strong>内容分发网络</strong>。</p><p>其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输得更快、更稳定。</p><p>通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。</p><p>其目的是使用户可就近取得所需内容，解决 Internet网络拥挤的状况，提高用户访问网站的响应速度。</p><p>工作过程：</p><ol><li>用户向浏览器提供要访问的域名；</li><li>浏览器调用域名解析库对域名进行解析，由于CDN对域名解析过程进行了调整，所以解析函数库一般得到的是该域名对应的CNAME记录，为了得到实际IP地址，浏览器需要再次对获得的CNAME域名进行解析以得到实际的IP地址；在此过程中，使用的全局<strong>负载均衡DNS解析</strong>，如根据地理位置信息解析对应的IP地址，使得用户能就近访问。</li><li>此次解析得到CDN缓存服务器的IP地址，浏览器在得到实际的IP地址以后，向缓存服务器发出访问请求；</li><li>缓存服务器根据浏览器提供的要访问的域名，通过Cache内部专用DNS解析得到此域名的实际IP地址，再由缓存服务器向此实际IP地址提交访问请求；</li><li>缓存服务器从实际IP地址得得到内容以后，一方面在本地进行保存，以备以后使用，另一方面把获取的数据返回给客户端，完成数据服务过程；</li><li>客户端得到由缓存服务器返回的数据以后显示出来并完成整个浏览的数据请求过程。</li></ol>',7)]))}const d=e(n,[["render",i]]);export{C as __pageData,d as default};
