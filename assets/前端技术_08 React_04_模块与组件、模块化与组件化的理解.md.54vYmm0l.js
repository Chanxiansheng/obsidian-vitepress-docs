import{_ as e,c as t,o as _,ag as l}from"./chunks/framework.-ewJmwvT.js";const m=JSON.parse('{"title":"04_ 模块与组件、模块化与组件化的理解","description":"","frontmatter":{},"headers":[],"relativePath":"前端技术/08 React/04_模块与组件、模块化与组件化的理解.md","filePath":"前端技术/08 React/04_模块与组件、模块化与组件化的理解.md"}'),i={name:"前端技术/08 React/04_模块与组件、模块化与组件化的理解.md"};function r(o,a,s,n,h,c){return _(),t("div",null,a[0]||(a[0]=[l('<h1 id="_04-模块与组件、模块化与组件化的理解" tabindex="-1">04_ 模块与组件、模块化与组件化的理解 <a class="header-anchor" href="#_04-模块与组件、模块化与组件化的理解" aria-label="Permalink to &quot;04_ 模块与组件、模块化与组件化的理解&quot;">​</a></h1><h3 id="模块" tabindex="-1">模块 <a class="header-anchor" href="#模块" aria-label="Permalink to &quot;模块&quot;">​</a></h3><ol><li>理解：向外提供特定功能的 js 程序, 一般就是一个 js 文件</li><li>为什么要拆成模块：随着业务逻辑增加，代码越来越多且复杂。</li><li>作用：复用 js, 简化 js 的编写, 提高 js 运行效率</li></ol><h3 id="组件" tabindex="-1">组件 <a class="header-anchor" href="#组件" aria-label="Permalink to &quot;组件&quot;">​</a></h3><ol><li>理解：用来实现局部功能效果的代码和资源的集合 (html/css/js/image 等等)</li><li>为什么要用组件： 一个界面的功能更复杂</li><li>作用：复用编码, 简化项目编码, 提高运行效率</li></ol><h3 id="模块化" tabindex="-1">模块化 <a class="header-anchor" href="#模块化" aria-label="Permalink to &quot;模块化&quot;">​</a></h3><p>当应用的 js 都以模块来编写的, 这个应用就是一个模块化的应用</p><h3 id="组件化" tabindex="-1">组件化 <a class="header-anchor" href="#组件化" aria-label="Permalink to &quot;组件化&quot;">​</a></h3><p>当应用是以多组件的方式实现, 这个应用就是一个组件化的应用</p>',9)]))}const p=e(i,[["render",r]]);export{m as __pageData,p as default};
