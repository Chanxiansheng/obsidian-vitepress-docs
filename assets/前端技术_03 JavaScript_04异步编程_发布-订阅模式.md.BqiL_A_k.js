import{_ as e,c as t,o as r,ae as n}from"./chunks/framework.CIivgcbp.js";const d=JSON.parse('{"title":"发布 - 订阅模式","description":"","frontmatter":{},"headers":[],"relativePath":"前端技术/03 JavaScript/04异步编程/发布-订阅模式.md","filePath":"前端技术/03 JavaScript/04异步编程/发布-订阅模式.md"}'),i={name:"前端技术/03 JavaScript/04异步编程/发布-订阅模式.md"};function o(s,a,_,l,c,h){return r(),t("div",null,a[0]||(a[0]=[n('<h1 id="发布-订阅模式" tabindex="-1">发布 - 订阅模式 <a class="header-anchor" href="#发布-订阅模式" aria-label="Permalink to &quot;发布 - 订阅模式&quot;">​</a></h1><p><a href="https://juejin.cn/post/6844903513009422343" target="_blank" rel="noreferrer">观察者模式 vs 发布-订阅模式 - 掘金</a></p><h2 id="一、观察者模式" tabindex="-1">一、观察者模式 <a class="header-anchor" href="#一、观察者模式" aria-label="Permalink to &quot;一、观察者模式&quot;">​</a></h2><h2 id="二、发布-订阅模式" tabindex="-1">二、发布 - 订阅模式 <a class="header-anchor" href="#二、发布-订阅模式" aria-label="Permalink to &quot;二、发布 - 订阅模式&quot;">​</a></h2><p>发布 - 订阅是一种设计模式，是一种对象间一对多的依赖关系，当一个对象的状态发送改变时，所有依赖于它的对象都将得到状态改变的通知。</p><p>订阅者（Subscriber）把自己想订阅的事件注册（Subscribe）到调度中心（Event Channel），当发布者（Publisher）发布该事件（Publish Event）到调度中心，也就是该事件触发时，由调度中心统一调度（Fire Event）订阅者注册到调度中心的处理代码。</p>',6)]))}const u=e(i,[["render",o]]);export{d as __pageData,u as default};
