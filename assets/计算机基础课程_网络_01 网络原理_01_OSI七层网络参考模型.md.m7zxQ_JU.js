import{_ as t,c as r,o,ag as e}from"./chunks/framework.-ewJmwvT.js";const s="/obsidian-vitepress-docs/assets/7c485e56e4a1d0656eaaeabb8ce15629_kq6hXVrqHn.BqEgPsFt.png",g=JSON.parse('{"title":"OSI 七层网络参考模型","description":"","frontmatter":{},"headers":[],"relativePath":"计算机基础课程/网络/01 网络原理/01_OSI七层网络参考模型.md","filePath":"计算机基础课程/网络/01 网络原理/01_OSI七层网络参考模型.md"}'),n={name:"计算机基础课程/网络/01 网络原理/01_OSI七层网络参考模型.md"};function i(l,a,p,_,h,d){return o(),r("div",null,a[0]||(a[0]=[e('<h1 id="osi-七层网络参考模型" tabindex="-1">OSI 七层网络参考模型 <a class="header-anchor" href="#osi-七层网络参考模型" aria-label="Permalink to &quot;OSI 七层网络参考模型&quot;">​</a></h1><p><img src="'+s+'" alt=""></p><h2 id="_1-物理层" tabindex="-1">1. 物理层 <a class="header-anchor" href="#_1-物理层" aria-label="Permalink to &quot;1. 物理层&quot;">​</a></h2><p>物理层是直接和物理介质打交道的。</p><p>物理层的设备有网卡，网线，集线器，中继器，调制解调器等。</p><p>物理层信道</p><ul><li>有线信道（明线、对称电缆、同轴电缆、光纤等）</li><li>无线通道 （蜂窝网络、wifi、电台等）</li></ul><p>在这一层，主要传输的是<strong>光电信号</strong>，通过调制解调后转换为 010101 这样的数据<strong>比特流</strong>，单位为 <code>bit</code>。</p><h2 id="_2-数据链路层" tabindex="-1">2. 数据链路层 <a class="header-anchor" href="#_2-数据链路层" aria-label="Permalink to &quot;2. 数据链路层&quot;">​</a></h2><p>建立逻辑连接、进行硬件地址寻址、差错校验等功能。（由底层网络定义协议）将比特组合成<strong>字节</strong><code>byte</code> 进而组合成<strong>帧</strong>，用 MAC 地址访问介质，错误发现但不能纠正。</p><p>MAC 地址：每个网卡的唯一标识。</p><p>有了 Mac 地址之后就可以知道谁是接收者，谁是发送者，并且知道了数据的内容并且进行了分组。接着通过<strong>广播</strong>的方式进行传输，在局域网内所有的计算机都能收到消息。</p><h2 id="_3-网络层" tabindex="-1">3. 网络层 <a class="header-anchor" href="#_3-网络层" aria-label="Permalink to &quot;3. 网络层&quot;">​</a></h2><p>网络层是最复杂的一层，在这一层就定义了我们的 IP，<code>220.xxx.xxx.xxx</code>。</p><p>该层控制数据链路层与传输层之间的信息转发，建立、维持和终止网络的连接。具体地说，数据链路层的数据在这一层被转换为<strong>数据包</strong>，然后通过路径选择、分段组合、顺序、进/出路由等控制，将信息从一个网络设备传送到另一个网络设备。</p><ul><li><strong>寻址</strong>：对网络层而言使用 IP 地址来唯一标识互联网上的设备，网络层依靠 IP 地址进行相互通信（类似于数据链路层的 MAC 地址）</li><li><strong>路由</strong>：在同一个网络中的内部通信并不需要网络层设备，仅仅靠数据链路层就可以完成相互通信，对于不同的网络之间相互通信则必须借助路由器等三层设备。</li></ul><p>生活中的路由器就是在第三层工作的。</p><p>在数据链路层的时候说过了如果所有的使用互联网的用户在同一个网段中，会产生广播风暴，所以要将用户进行划分，让他们在不同的网段中，自己在自己的小网段中广播。而互联网就是这无数的子网络构成的一个巨型网络。</p><p>在网络层中引入了一套新的地址，让我们能够区分不同的网段。这套地址就叫做“<strong>网络地址</strong>”，简称“网址”。</p><p>于是，“网络层”出现以后，每台计算机有了两种地址，一种是 MAC 地址，另一种是网络地址。两种地址之间没有任何联系，MAC 地址是绑定在网卡上的，网络地址则是管理员分配的，它们只是随机组合在一起。</p><p>网络地址帮助我们确定计算机所在的子网络，MAC 地址则将数据包送到该子网络中的目标网卡。因此，从逻辑上可以推断，必定是先处理网络地址，然后再处理 MAC 地址。</p><p>这一层中有一个规定网络地址的协议，叫做<strong>IP 协议</strong>，它所定义的地址，就被称为<strong>IP 地址</strong>。目前，广泛采用的是 IP 协议第四版，简称 IPv4。这个版本规定，网络地址由 32 个二进制位组成。目前 IPv4 的地址已经不够用了，所以现在推广 IPv6。</p><h2 id="_4-传输层" tabindex="-1">4. 传输层 <a class="header-anchor" href="#_4-传输层" aria-label="Permalink to &quot;4. 传输层&quot;">​</a></h2><p>传输层主要就是定义我们的端口号，以及控流，和校验。并且拥有两个熟知的协议 <strong>TCP</strong>、<strong>UDP</strong>。</p><ul><li><p>TCP 是面向连接的协议并且 TCP 是可靠的。<br> 因为 TCP 会进行三次握手四次挥手所以是可靠的，但是这样会降低速度</p></li><li><p>UDP 具有较好的实时性， 效率比 TCP 高。<br> UDP 是没有三次握手四次挥手的，故此不稳定，但是速度快，常用于直播，游戏</p></li></ul><p>这一层传输的通常被称为<strong>数据段</strong>。</p><h2 id="_5-会话层" tabindex="-1">5. 会话层 <a class="header-anchor" href="#_5-会话层" aria-label="Permalink to &quot;5. 会话层&quot;">​</a></h2><p>会话层，是在发送方和接收方之间进行通信时创建、维持、之后终止或断开连接的地方，与电话通话有点相似。</p><p>会话层定义了一种机制，允许发送方和接收方启动或停止请求会话，以及当双方发生拥塞时仍然能保持对话。</p><p>会话层包含了一种称为检查点（Checkpoint） 的机制来维持可靠会话。检查点定义了一个最接近成功通信的点，并且定义了当发生内容丢失或损坏时需要回滚以便恢复丢失或损坏数据的点，即断点下载的原理。</p><h2 id="_6-表示层" tabindex="-1">6. 表示层 <a class="header-anchor" href="#_6-表示层" aria-label="Permalink to &quot;6. 表示层&quot;">​</a></h2><p>表示层主要做了几件重要的事情：安全，压缩，也是程序在网络中的一个翻译官。</p><ul><li>安全：在你的数据发送之前进行加密，在接受者的表示层进行解密。</li><li>压缩：表示层还会对图片文件等格式进行解码和编码 例如 JPEG、ASCll 图片是人类能读懂的计算机需要转换成计算机能读懂的编码。</li></ul><h2 id="_7-应用层" tabindex="-1">7. 应用层 <a class="header-anchor" href="#_7-应用层" aria-label="Permalink to &quot;7. 应用层&quot;">​</a></h2><p>应用层是前后端交互使用最多的一层，例如 ajax 调用接口发送 http 请求，再比如域名系统 DNS，邮件协议 SMTP，webSocket 长连接，SSH 协议等。</p><p>会话层，表示层，应用层传输的数据通常都被称为<strong>报文</strong>。</p>',36)]))}const P=t(n,[["render",i]]);export{g as __pageData,P as default};
