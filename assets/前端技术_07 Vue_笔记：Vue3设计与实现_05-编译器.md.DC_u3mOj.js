import{_ as e,c as r,o as t,ag as h}from"./chunks/framework.-ewJmwvT.js";const b=JSON.parse('{"title":"05- 编译器","description":"","frontmatter":{},"headers":[],"relativePath":"前端技术/07 Vue/笔记：Vue3设计与实现/05-编译器.md","filePath":"前端技术/07 Vue/笔记：Vue3设计与实现/05-编译器.md"}'),o={name:"前端技术/07 Vue/笔记：Vue3设计与实现/05-编译器.md"};function l(i,a,n,d,s,c){return t(),r("div",null,a[0]||(a[0]=[h('<h1 id="_05-编译器" tabindex="-1">05- 编译器 <a class="header-anchor" href="#_05-编译器" aria-label="Permalink to &quot;05- 编译器&quot;">​</a></h1><p>#待补（程度：中）</p><h2 id="一、编译器核心技术概览" tabindex="-1">一、编译器核心技术概览 <a class="header-anchor" href="#一、编译器核心技术概览" aria-label="Permalink to &quot;一、编译器核心技术概览&quot;">​</a></h2><h3 id="模板-dsl-的编译器" tabindex="-1">模板 DSL 的编译器 <a class="header-anchor" href="#模板-dsl-的编译器" aria-label="Permalink to &quot;模板 DSL 的编译器&quot;">​</a></h3><h3 id="parser-的实现原理与状态机" tabindex="-1">parser 的实现原理与状态机 <a class="header-anchor" href="#parser-的实现原理与状态机" aria-label="Permalink to &quot;parser 的实现原理与状态机&quot;">​</a></h3><h3 id="构造-ast" tabindex="-1">构造 AST <a class="header-anchor" href="#构造-ast" aria-label="Permalink to &quot;构造 AST&quot;">​</a></h3><h3 id="ast-的转换与插件化架构" tabindex="-1">AST 的转换与插件化架构 <a class="header-anchor" href="#ast-的转换与插件化架构" aria-label="Permalink to &quot;AST 的转换与插件化架构&quot;">​</a></h3><h3 id="将模板-ast-转为-javascript-ast" tabindex="-1">将模板 AST 转为 JavaScript AST <a class="header-anchor" href="#将模板-ast-转为-javascript-ast" aria-label="Permalink to &quot;将模板 AST 转为 JavaScript AST&quot;">​</a></h3><h3 id="代码生成" tabindex="-1">代码生成 <a class="header-anchor" href="#代码生成" aria-label="Permalink to &quot;代码生成&quot;">​</a></h3><h2 id="二、解析器" tabindex="-1">二、解析器 <a class="header-anchor" href="#二、解析器" aria-label="Permalink to &quot;二、解析器&quot;">​</a></h2><h3 id="文本模式及其对解析器的影响" tabindex="-1">文本模式及其对解析器的影响 <a class="header-anchor" href="#文本模式及其对解析器的影响" aria-label="Permalink to &quot;文本模式及其对解析器的影响&quot;">​</a></h3><h3 id="递归下降算法构造模板-ast" tabindex="-1">递归下降算法构造模板 AST <a class="header-anchor" href="#递归下降算法构造模板-ast" aria-label="Permalink to &quot;递归下降算法构造模板 AST&quot;">​</a></h3><h3 id="状态机的开启与停止" tabindex="-1">状态机的开启与停止 <a class="header-anchor" href="#状态机的开启与停止" aria-label="Permalink to &quot;状态机的开启与停止&quot;">​</a></h3><h3 id="解析标签节点" tabindex="-1">解析标签节点 <a class="header-anchor" href="#解析标签节点" aria-label="Permalink to &quot;解析标签节点&quot;">​</a></h3><h3 id="解析属性" tabindex="-1">解析属性 <a class="header-anchor" href="#解析属性" aria-label="Permalink to &quot;解析属性&quot;">​</a></h3><h3 id="解析文本与解码-html-实体" tabindex="-1">解析文本与解码 HTML 实体 <a class="header-anchor" href="#解析文本与解码-html-实体" aria-label="Permalink to &quot;解析文本与解码 HTML 实体&quot;">​</a></h3><h3 id="解析插值与注释" tabindex="-1">解析插值与注释 <a class="header-anchor" href="#解析插值与注释" aria-label="Permalink to &quot;解析插值与注释&quot;">​</a></h3><h2 id="三、编译优化" tabindex="-1">三、编译优化 <a class="header-anchor" href="#三、编译优化" aria-label="Permalink to &quot;三、编译优化&quot;">​</a></h2><h3 id="动态节点收集与补丁标志" tabindex="-1">动态节点收集与补丁标志 <a class="header-anchor" href="#动态节点收集与补丁标志" aria-label="Permalink to &quot;动态节点收集与补丁标志&quot;">​</a></h3><h3 id="block-树" tabindex="-1">Block 树 <a class="header-anchor" href="#block-树" aria-label="Permalink to &quot;Block 树&quot;">​</a></h3><h3 id="静态提升" tabindex="-1">静态提升 <a class="header-anchor" href="#静态提升" aria-label="Permalink to &quot;静态提升&quot;">​</a></h3><h3 id="预字符串化" tabindex="-1">预字符串化 <a class="header-anchor" href="#预字符串化" aria-label="Permalink to &quot;预字符串化&quot;">​</a></h3><h3 id="缓存内联事件处理函数" tabindex="-1">缓存内联事件处理函数 <a class="header-anchor" href="#缓存内联事件处理函数" aria-label="Permalink to &quot;缓存内联事件处理函数&quot;">​</a></h3><h3 id="v-once" tabindex="-1">v-once <a class="header-anchor" href="#v-once" aria-label="Permalink to &quot;v-once&quot;">​</a></h3>',24)]))}const q=e(o,[["render",l]]);export{b as __pageData,q as default};
