import{_ as i,c as e,o as a,ae as t}from"./chunks/framework.CIivgcbp.js";const d=JSON.parse('{"title":"CSS 计数器","description":"","frontmatter":{},"headers":[],"relativePath":"前端技术/02 CSS/02 CSS进阶/高级机制/CSS计数器.md","filePath":"前端技术/02 CSS/02 CSS进阶/高级机制/CSS计数器.md"}'),n={name:"前端技术/02 CSS/02 CSS进阶/高级机制/CSS计数器.md"};function l(h,s,r,p,o,c){return a(),e("div",null,s[0]||(s[0]=[t(`<h1 id="css-计数器" tabindex="-1">CSS 计数器 <a class="header-anchor" href="#css-计数器" aria-label="Permalink to &quot;CSS 计数器&quot;">​</a></h1><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_counter_styles/Using_CSS_counters" target="_blank" rel="noreferrer">使用 CSS 计数器 - CSS：层叠样式表 | MDN</a></p><p><strong>CSS 计数器</strong>可让你根据内容在文档中的位置调整其显示的外观。例如，你可以使用计数器自动为网页中的标题编号，或者更改有序列表的编号。</p><p>本质上 CSS 计数器是由 CSS 维护的变量，这些变量可能根据 CSS 规则跟踪使用次数以递增或递减。你可以自定义一个计数器，也可以修改 <code>list-item</code> 这一默认生成的应用于所有有序列表的计数器。</p><p>在使用计数器之前，必须使用 <code>counter-reset</code> 属性初始化计数器的值。计数器可通过 <code>counter-increment</code> 属性指定其值为递增或递减。当前计数器的值可通过 <code>counter()</code> 或 <code>counters()</code> 函数显示出来，这通常会在伪元素的 <code>content</code> 属性中使用。</p><h2 id="counter-reset" tabindex="-1">counter-reset <a class="header-anchor" href="#counter-reset" aria-label="Permalink to &quot;counter-reset&quot;">​</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/counter-reset" target="_blank" rel="noreferrer">counter-reset - CSS：层叠样式表 | MDN</a></p><p><strong><code>counter-reset</code></strong> 属性用于创建具名 CSS 计数器，并将其初始化为指定值。它支持创建从 1 向上计数到元素数量的计数器，以及从元素数量向下计数到 1 的计数器。</p><p>语法：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">counter-reset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =  &lt;计数器名字</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [&lt;初始值&gt;] | none；</span></span></code></pre></div><ul><li>初始值默认为 0</li></ul><blockquote><p><strong>备注：</strong> 计数器的值能够通过 CSS 属性 <code>counter-increment</code> 控制递增或递减。</p></blockquote><h2 id="counter-increment" tabindex="-1">counter-increment <a class="header-anchor" href="#counter-increment" aria-label="Permalink to &quot;counter-increment&quot;">​</a></h2><p><code>counter-increment</code> 属性用于将 CSS Counters 的值增加给定值。可以使用 <code>counter-reset</code> 属性重置计数器的值。</p><p>语法：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">counter-increment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\` = &lt;计数器名字</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [&lt;递增值&gt;] | none；</span></span></code></pre></div><ul><li>递增值默认为 1</li></ul><h2 id="counter" tabindex="-1">counter <a class="header-anchor" href="#counter" aria-label="Permalink to &quot;counter&quot;">​</a></h2><p><strong><code>counter()</code></strong>，返回一个代表计数器的当前值的字符串（==类似于格式化输出==）。它通常和伪元素搭配使用，但是理论上可以在支持 <code>&lt;string&gt;</code> 值的任何地方使用。</p><p>一个计数器本身没有可见的效果，而是通过 <code>counter()</code> 函数（和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/counters" target="_blank" rel="noreferrer"><code>counters()</code></a> 函数）返回开发人员定义的字符串（或图像）从而使计数器拥有很棒的作用。</p><p>语法：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">counter( &lt;计数器名字</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, &lt;计数器样式</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">? )</span></span></code></pre></div><ul><li>计数器样式默认为十进制的普通数字，可以设为 <ul><li>upper Roman 罗马数字</li><li>lower-alpha 小写字母</li><li>trad-chinese-informal 中文数字标题</li><li>@counter-style 自定义 counter 样式</li><li>更多可以参考 <em><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/list-style-type" target="_blank" rel="noreferrer">list-style-type</a></em></li></ul></li></ul><h2 id="例子-一级标题编号" tabindex="-1">例子 - 一级标题编号 <a class="header-anchor" href="#例子-一级标题编号" aria-label="Permalink to &quot;例子 - 一级标题编号&quot;">​</a></h2><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      counter-reset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: section </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      counter-increment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: section </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    h1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">counter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">section</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">trad-chinese-informal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;、&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ol><li>给父容器一个 <code>counter-reset</code> section；</li><li>其下每个一级标题 h1 设定一个 <code>counter-increment</code>，意味着每个 h1 计数器都会先 +1；</li><li>给每个 h1 添加一个:before 伪元素，content 使用 counter 进行格式化输出固定的字符串，使用 <code>trad-chinese-informal</code> 结合“、”作为样式。</li></ol>`,26)]))}const E=i(n,[["render",l]]);export{d as __pageData,E as default};
