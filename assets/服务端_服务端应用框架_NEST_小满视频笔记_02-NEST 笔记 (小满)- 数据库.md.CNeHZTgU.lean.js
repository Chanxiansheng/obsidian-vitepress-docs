import{_ as l,c as t,o as p,ae as n,j as s,a as i}from"./chunks/framework.CIivgcbp.js";const o=JSON.parse('{"title":"02-NEST 笔记 (小满)- 数据库","description":"","frontmatter":{},"headers":[],"relativePath":"服务端/服务端应用框架/NEST/小满视频笔记/02-NEST 笔记 (小满)- 数据库.md","filePath":"服务端/服务端应用框架/NEST/小满视频笔记/02-NEST 笔记 (小满)- 数据库.md"}'),e={name:"服务端/服务端应用框架/NEST/小满视频笔记/02-NEST 笔记 (小满)- 数据库.md"};function h(k,a,r,E,d,u){return p(),t("div",null,a[0]||(a[0]=[n("",19),s("table",{tabindex:"0"},[s("thead",null,[s("tr",null,[s("th",null,"属性"),s("th",null,"类型"),s("th",null,"描述")])]),s("tbody",null,[s("tr",null,[s("td",null,[s("strong",null,"type")]),s("td",null,"ColumnType"),s("td",null,"列类型。")]),s("tr",null,[s("td",null,[s("strong",null,"name")]),s("td",null,"string"),s("td",null,"数据库表中的列名。默认情况下，列名称是从属性的名称生成的。你也可以通过指定自己的名称来更改它。")]),s("tr",null,[s("td",null,[s("strong",null,"length")]),s("td",null,"number"),s("td",null,[i("列类型的长度。例如，如果要创建 "),s("code",null,"varchar(150)"),i(" 类型，请指定列类型和长度选项。")])]),s("tr",null,[s("td",null,[s("strong",null,"width")]),s("td",null,"number"),s("td",null,"列类型的显示范围。仅用于 MySQL 整数类型。")]),s("tr",null,[s("td",null,[s("strong",null,"onUpdate")]),s("td",null,"string"),s("td",null,"ON UPDATE 触发器。仅用于 MySQL。")]),s("tr",null,[s("td",null,[s("strong",null,"nullable")]),s("td",null,"boolean"),s("td",null,[i("在数据库中使列 NULL 或 NOT NULL。默认情况下，列是 "),s("code",null,"nullable: false"),i("。")])]),s("tr",null,[s("td",null,[s("strong",null,"update")]),s("td",null,"boolean"),s("td",null,[i('指示 "save" 操作是否更新列值。如果为 '),s("code",null,"false"),i("，则只能在第一次插入对象时编写该值。默认值为 "),s("code",null,"true"),i("。")])]),s("tr",null,[s("td",null,[s("strong",null,"select")]),s("td",null,"boolean"),s("td",null,[i("定义在进行查询时是否默认隐藏此列。设置为 "),s("code",null,"false"),i(" 时，列数据不会显示在标准查询中。默认情况下，列是 "),s("code",null,"select: true"),i("。")])]),s("tr",null,[s("td",null,[s("strong",null,"default")]),s("td",null,"string"),s("td",null,"添加数据库级列的 DEFAULT 值。")]),s("tr",null,[s("td",null,[s("strong",null,"primary")]),s("td",null,"boolean"),s("td",null,"将列标记为主要列。")]),s("tr",null,[s("td",null,[s("strong",null,"unique")]),s("td",null,"boolean"),s("td",null,"将列标记为唯一列（创建唯一约束）。")]),s("tr",null,[s("td",null,[s("strong",null,"comment")]),s("td",null,"string"),s("td",null,"数据库列备注，并非所有数据库类型都支持。")]),s("tr",null,[s("td",null,[s("strong",null,"precision")]),s("td",null,"number"),s("td",null,"十进制（精确数字）列的精度（仅适用于十进制列），这是为值存储的最大位数。")]),s("tr",null,[s("td",null,[s("strong",null,"scale")]),s("td",null,"number"),s("td",null,"十进制（精确数字）列的比例（仅适用于十进制列），表示小数点右侧的位数，且不得大于精度。")]),s("tr",null,[s("td",null,[s("strong",null,"zerofill")]),s("td",null,"boolean"),s("td",null,"将 ZEROFILL 属性设置为数字列。仅在 MySQL 中使用。")]),s("tr",null,[s("td",null,[s("strong",null,"unsigned")]),s("td",null,"boolean"),s("td",null,"将 UNSIGNED 属性设置为数字列。仅在 MySQL 中使用。")]),s("tr",null,[s("td",null,[s("strong",null,"charset")]),s("td",null,"string"),s("td",null,"定义列字符集。并非所有数据库类型都支持。")]),s("tr",null,[s("td",null,[s("strong",null,"collation")]),s("td",null,"string"),s("td",null,"定义列排序规则。")]),s("tr",null,[s("td",null,[s("strong",null,"enum")]),s("td",null,"string[] | AnyEnum"),s("td",null,"在 enum 列类型中使用，以指定允许的枚举值列表。")]),s("tr",null,[s("td",null,[s("strong",null,"asExpression")]),s("td",null,"string"),s("td",null,"生成的列表达式。仅在 MySQL 中使用。")]),s("tr",null,[s("td",null,[s("strong",null,"generatedType")]),s("td",null,'"VIRTUAL" |"STORED"'),s("td",null,"生成的列类型。仅在 MySQL 中使用。")]),s("tr",null,[s("td",null,[s("strong",null,"hstoreType")]),s("td",null,'"object" |"string"'),s("td",null,"返回 HSTORE 列类型。以字符串或对象的形式返回值。仅在 Postgres 中使用。")]),s("tr",null,[s("td",null,[s("strong",null,"array")]),s("td",null,"boolean"),s("td",null,[i("用于可以是数组的 Postgres 列类型（例如 "),s("code",null,"int[]"),i("）。")])]),s("tr",null,[s("td",null,[s("strong",null,"transformer")]),s("td",{"from(value:":"","DatabaseType):":"","EntityType,":"","to(value:":"","EntityType):":"",DatabaseType:""}),s("td",null,[i("用于将任意类型 "),s("code",null,"EntityType"),i(" 的属性编组为数据库支持的类型 "),s("code",null,"DatabaseType"),i("。")])])])],-1),n("",3)]))}const y=l(e,[["render",h]]);export{o as __pageData,y as default};
