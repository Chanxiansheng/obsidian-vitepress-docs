import{_ as e,c as l,o as a,ag as i}from"./chunks/framework.-ewJmwvT.js";const d="/obsidian-vitepress-docs/assets/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E5%9D%90%E6%A0%87-1.DarK2q5l.png",n="/obsidian-vitepress-docs/assets/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E5%9D%90%E6%A0%87-2.Cv41AKos.png",r="/obsidian-vitepress-docs/assets/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E5%9D%90%E6%A0%87-3.Ce_GwPSN.png",o="/obsidian-vitepress-docs/assets/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E5%9D%90%E6%A0%87-4.4xJ1CarO.png",s="/obsidian-vitepress-docs/assets/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E5%9D%90%E6%A0%87-6.B-qo2xuh.png",u=JSON.parse('{"title":"浏览器中的坐标","description":"","frontmatter":{},"headers":[],"relativePath":"前端技术/03 JavaScript/06浏览器环境/浏览器中的坐标.md","filePath":"前端技术/03 JavaScript/06浏览器环境/浏览器中的坐标.md"}'),h={name:"前端技术/03 JavaScript/06浏览器环境/浏览器中的坐标.md"};function c(f,t,g,x,y,b){return a(),l("div",null,t[0]||(t[0]=[i('<h1 id="浏览器中的坐标" tabindex="-1">浏览器中的坐标 <a class="header-anchor" href="#浏览器中的坐标" aria-label="Permalink to &quot;浏览器中的坐标&quot;">​</a></h1><p>浏览器中的坐标分类</p><ol><li>屏幕相关：Screen 对象</li><li>窗口相关：Window 对象</li><li>元素相关：Element 对象</li><li>事件相关：Event 对象</li></ol><h2 id="屏幕相关-screen" tabindex="-1">屏幕相关 Screen <a class="header-anchor" href="#屏幕相关-screen" aria-label="Permalink to &quot;屏幕相关 Screen&quot;">​</a></h2><h3 id="width-height" tabindex="-1">width / height <a class="header-anchor" href="#width-height" aria-label="Permalink to &quot;width / height&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">screen.width</td><td style="text-align:left;">计算机屏幕的宽</td></tr><tr><td style="text-align:left;">screen.height</td><td style="text-align:left;">计算机屏幕的高</td></tr></tbody></table><blockquote><p><strong>注意</strong></p><ol><li><p>该组属性返回的值并不是全部对浏览器窗口可用。小工具（Widgets），如任务栏或其他特殊的程序窗口，可能会减少浏览器窗口和其他应用程序能够利用的空间。</p></li><li><p>当返回屏幕宽高时，浏览器会考虑缩放设置。只有当缩放比例为 100% 时，浏览器才会返回真实的屏幕高度。 <code>window.devicePixelRatio</code></p></li></ol></blockquote><h3 id="availwidth-availheight" tabindex="-1">availWidth / availHeight <a class="header-anchor" href="#availwidth-availheight" aria-label="Permalink to &quot;availWidth / availHeight&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">screen.availWidth</td><td style="text-align:left;">浏览器窗口在屏幕上可占用的垂直空间</td></tr><tr><td style="text-align:left;">screen.availHeight</td><td style="text-align:left;">浏览器窗口在屏幕上可占用的水平宽度</td></tr></tbody></table><blockquote><p>该组属性是屏幕可用的宽度和高度，avail 是 availble 的缩写。</p></blockquote><h2 id="窗口相关-window" tabindex="-1">窗口相关 Window <a class="header-anchor" href="#窗口相关-window" aria-label="Permalink to &quot;窗口相关 Window&quot;">​</a></h2><h3 id="innerwidth-innerheight" tabindex="-1">innerWidth / innerHeight <a class="header-anchor" href="#innerwidth-innerheight" aria-label="Permalink to &quot;innerWidth / innerHeight&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">window.innerWidth</td><td style="text-align:left;">浏览器窗口中可视区域（viewpoint）的宽度</td></tr><tr><td style="text-align:left;">window.innerHeight</td><td style="text-align:left;">浏览器窗口中可视区域（viewpoint）的高度</td></tr></tbody></table><blockquote><p>该组属性包括垂直滚动条和水平滚动条的宽度和高度。</p></blockquote><h3 id="outerwidth-outerheight" tabindex="-1">outerWidth / outerHeight <a class="header-anchor" href="#outerwidth-outerheight" aria-label="Permalink to &quot;outerWidth / outerHeight&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">window.outerWidth</td><td style="text-align:left;">浏览器窗口本身的宽度</td></tr><tr><td style="text-align:left;">window.outerHeight</td><td style="text-align:left;">浏览器窗口本身的高度</td></tr></tbody></table><p><img src="'+d+'" alt="D-学习笔记/前端技术/03 JavaScript/06浏览器环境/attachments/浏览器中的坐标-1.png"></p><blockquote><p>该组属性包括窗口侧边栏（如果存在）、窗口镶边（window chrome）和调正窗口大小的边框（window resizing borders/handles）。<br><code>outerWidth = innerWidth + 浏览器边框宽度</code></p></blockquote><h3 id="screenx-screeny" tabindex="-1">screenX / screenY <a class="header-anchor" href="#screenx-screeny" aria-label="Permalink to &quot;screenX / screenY&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">window.screenX</td><td style="text-align:left;">浏览器左边界距离操作系统桌面左边界的水平距离</td></tr><tr><td style="text-align:left;">window.screenY</td><td style="text-align:left;">浏览器顶部距离操作系统桌面顶部的垂直距离</td></tr><tr><td style="text-align:left;">window.screenLeft</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">window.screenTop</td><td style="text-align:left;"></td></tr></tbody></table><blockquote><p><code>screenLeft</code> 是 <code>Window.screenX</code> 属性的别名，<code>screenTop</code> 是 <code>Window.screenY</code> 属性的别名。</p></blockquote><h3 id="scrollx-scrolly" tabindex="-1">scrollX / scrollY <a class="header-anchor" href="#scrollx-scrolly" aria-label="Permalink to &quot;scrollX / scrollY&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">scrollX</td><td style="text-align:left;">返回文档/页面在水平方向已滚动的像素值。</td></tr><tr><td style="text-align:left;">scrollY</td><td style="text-align:left;">返回文档/页面在垂直方向已滚动的像素值。</td></tr><tr><td style="text-align:left;">pageXOffset</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">pageYOffset</td><td style="text-align:left;"></td></tr></tbody></table><blockquote><p><code>pageXOffset</code> 属性是 <code>scrollX</code> 属性的别名，<code>pageYOffset</code> 属性是 <code>scrollY</code> 属性的别名</p></blockquote><h2 id="元素相关-element" tabindex="-1">元素相关 Element <a class="header-anchor" href="#元素相关-element" aria-label="Permalink to &quot;元素相关 Element&quot;">​</a></h2><h3 id="clientwidth-clientheight" tabindex="-1">clientWidth / clientHeight <a class="header-anchor" href="#clientwidth-clientheight" aria-label="Permalink to &quot;clientWidth / clientHeight&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">element.clientWidth</td><td style="text-align:left;">元素的宽度，包含内边距</td></tr><tr><td style="text-align:left;">element.clientHeight</td><td style="text-align:left;">元素的高度，包含内边距</td></tr></tbody></table><blockquote><p><code>clientWidth = width +  padding - 垂直滚动条宽度</code><br><code>clientHeight = height +  padding - 水平滚动条高度</code></p></blockquote><p><img src="'+n+'" alt="D-学习笔记/前端技术/03 JavaScript/06浏览器环境/attachments/浏览器中的坐标-2.png"></p><h3 id="clientleft-clienttop" tabindex="-1">clientLeft / clientTop <a class="header-anchor" href="#clientleft-clienttop" aria-label="Permalink to &quot;clientLeft / clientTop&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">element.clientLeft</td><td style="text-align:left;">元素左边框的宽度</td></tr><tr><td style="text-align:left;">element.clientTop</td><td style="text-align:left;">元素顶边框的高度</td></tr></tbody></table><h3 id="offsetwidth-offsetheight" tabindex="-1">offsetWidth / offsetHeight <a class="header-anchor" href="#offsetwidth-offsetheight" aria-label="Permalink to &quot;offsetWidth / offsetHeight&quot;">​</a></h3><p>适用 <code>HTMLElement</code></p><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">element.offsetWidth</td><td style="text-align:left;">元素的像素宽度，包含内边距和边框</td></tr><tr><td style="text-align:left;">element.offsetHeight</td><td style="text-align:left;">元素的像素高度，包含内边距和边框</td></tr></tbody></table><blockquote><p><code>offsetWidth = width +  padding + border</code><br><code>offsetHeight = height +  padding + border</code></p></blockquote><p><img src="'+r+'" alt="D-学习笔记/前端技术/03 JavaScript/06浏览器环境/attachments/浏览器中的坐标-3.png"></p><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">element.offsetLeft</td><td style="text-align:left;">当前元素左上角（不包括 margin，以 border 的左上顶点计算）相对于父节点的左边界偏移</td></tr><tr><td style="text-align:left;">element.offsetTop</td><td style="text-align:left;">当前元素左上角（不包括 margin，以 border 的左上顶点计算）相对于父节点的上边界偏移</td></tr></tbody></table><h3 id="scrollwidth-scrollheight" tabindex="-1">scrollWidth / scrollHeight <a class="header-anchor" href="#scrollwidth-scrollheight" aria-label="Permalink to &quot;scrollWidth / scrollHeight&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">element.scrollWidth</td><td style="text-align:left;">元素的实际宽度</td></tr><tr><td style="text-align:left;">element.scrollHeight</td><td style="text-align:left;">元素的实际高度</td></tr><tr><td style="text-align:left;">element.scrollLeft</td><td style="text-align:left;">网页滚动条垂直方向滚去的距离</td></tr><tr><td style="text-align:left;">element.scrollTop</td><td style="text-align:left;">网页滚动条水平方向滚去的距离</td></tr></tbody></table><p><img src="'+o+'" alt="D-学习笔记/前端技术/03 JavaScript/06浏览器环境/attachments/浏览器中的坐标-4.png"></p><h2 id="事件相关-event" tabindex="-1">事件相关 Event <a class="header-anchor" href="#事件相关-event" aria-label="Permalink to &quot;事件相关 Event&quot;">​</a></h2><p>MouseEvent、touchEvent、dragEvent 等等各种事件的具体坐标属性不尽相同，下以 MouseEvent 为例。<br><img src="'+s+'" alt="D-学习笔记/前端技术/03 JavaScript/06浏览器环境/attachments/浏览器中的坐标-6.png"></p><h3 id="screenx-screeny-1" tabindex="-1">screenX / screenY <a class="header-anchor" href="#screenx-screeny-1" aria-label="Permalink to &quot;screenX / screenY&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">event.screenX</td><td style="text-align:left;">事件发生时目标点相对于全局（屏幕）的 X 轴坐标</td></tr><tr><td style="text-align:left;">event.screenY</td><td style="text-align:left;">事件发生时目标点相对于全局（屏幕）的 Y 轴坐标</td></tr></tbody></table><h3 id="clientx-clienty" tabindex="-1">clientX / clientY <a class="header-anchor" href="#clientx-clienty" aria-label="Permalink to &quot;clientX / clientY&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">event.clientX</td><td style="text-align:left;">事件发生时目标点相对于浏览器可视范围的 X 轴坐标</td></tr><tr><td style="text-align:left;">event.clientY</td><td style="text-align:left;">事件发生时目标点相对于浏览器可视范围的 Y 轴坐标</td></tr><tr><td style="text-align:left;">event.x</td><td style="text-align:left;">event.clientX 别名</td></tr><tr><td style="text-align:left;">event.y</td><td style="text-align:left;">event.clientY 别名</td></tr></tbody></table><h3 id="pagex-pagey" tabindex="-1">pageX / pageY <a class="header-anchor" href="#pagex-pagey" aria-label="Permalink to &quot;pageX / pageY&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">event.clientX</td><td style="text-align:left;">事件发生时目标点相对于整个文档的 X 轴坐标</td></tr><tr><td style="text-align:left;">event.clientY</td><td style="text-align:left;">事件发生时目标点相对于整个文档的 Y 轴坐标</td></tr></tbody></table><h3 id="offsetx-offsety" tabindex="-1">offsetX / offsetY <a class="header-anchor" href="#offsetx-offsety" aria-label="Permalink to &quot;offsetX / offsetY&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">event.offsetX</td><td style="text-align:left;">事件发生时目标点相对于事件元素的 X 轴坐标</td></tr><tr><td style="text-align:left;">event.offsetY</td><td style="text-align:left;">事件发生时目标点相对于事件元素的 Y 轴坐标</td></tr></tbody></table>',50)]))}const m=e(h,[["render",c]]);export{u as __pageData,m as default};
