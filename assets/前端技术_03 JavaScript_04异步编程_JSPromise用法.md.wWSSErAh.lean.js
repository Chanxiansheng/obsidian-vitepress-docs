import{_ as e,c as t,o as n,ae as a,j as s,a as l}from"./chunks/framework.CIivgcbp.js";const c=JSON.parse('{"title":"JS Promise 用法","description":"","frontmatter":{},"headers":[],"relativePath":"前端技术/03 JavaScript/04异步编程/JSPromise用法.md","filePath":"前端技术/03 JavaScript/04异步编程/JSPromise用法.md"}'),h={name:"前端技术/03 JavaScript/04异步编程/JSPromise用法.md"};function p(k,i,r,E,d,o){return n(),t("div",null,i[0]||(i[0]=[a("",34),s("ul",null,[s("li",null,[l("作用：将多个 promise 实例，包装成一个新的 promise。 "),s("ul",null,[s("li",null,[s("strong",null,"个人理解：相当于多个 Promise 值的与运算，无论成功或失败")])])]),s("li",null,"参数：一个 promise 数组或一个具有 Iterator 接口的 promsie 集合"),s("li",null,[l("返回值：新的 promise "),s("ul",null,[s("li",{"status:":"","rejected,":"","reason:":"",reason:""},"返回一个值由每个 promise 值构成的数组的 promise，数组每个成员是一个对象，对象的格式是固定的{status: 'fulfilled', value: value} or")])])],-1),a("",10)]))}const y=e(h,[["render",p]]);export{c as __pageData,y as default};
