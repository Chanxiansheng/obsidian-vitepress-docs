import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.-ewJmwvT.js";const l="/obsidian-vitepress-docs/assets/%E7%AC%94%E8%AE%B0%EF%BC%9ATailwind%20CSS%20%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3-1.DihxvGRe.png",o=JSON.parse('{"title":"笔记：Tailwind CSS 官方文档","description":"","frontmatter":{},"headers":[],"relativePath":"前端技术/02 CSS/03 扩展语言/TailwindCSS/笔记：Tailwind CSS 官方文档.md","filePath":"前端技术/02 CSS/03 扩展语言/TailwindCSS/笔记：Tailwind CSS 官方文档.md"}'),e={name:"前端技术/02 CSS/03 扩展语言/TailwindCSS/笔记：Tailwind CSS 官方文档.md"};function h(p,s,k,d,r,E){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="笔记-tailwind-css-官方文档" tabindex="-1">笔记：Tailwind CSS 官方文档 <a class="header-anchor" href="#笔记-tailwind-css-官方文档" aria-label="Permalink to &quot;笔记：Tailwind CSS 官方文档&quot;">​</a></h1><p>#待补（程度：高）</p><blockquote><p>[!quote] 官网<br><a href="https://tailwindcss.com/" target="_blank" rel="noreferrer">Tailwind CSS - Rapidly build modern websites without ever leaving your HTML.</a></p><p>中文文档 <a href="https://tailwind.nodejs.cn/docs/installation" target="_blank" rel="noreferrer">使用 Vite 安装 Tailwind CSS - Tailwind CSS</a></p></blockquote><h2 id="开始" tabindex="-1">开始 <a class="header-anchor" href="#开始" aria-label="Permalink to &quot;开始&quot;">​</a></h2><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-tabs vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tabs</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tab: Vite</span></span>
<span class="line"><span>将 Tailwind CSS 安装为 Vite 插件是将其与 Laravel、SvelteKit、React Router、Nuxt 和 SolidJS 等框架集成的最无缝方式。</span></span>
<span class="line"><span>1. 通过 npm 安装 \`tailwindcss\` and \`@tailwindcss/vite\` 。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	\`\`\`terminal</span></span>
<span class="line"><span>	npm install tailwindcss @tailwindcss/vite</span></span>
<span class="line"><span>	\`\`\`</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>2. 在 vite.config.ts 文件中添加 \`@tailwindcss/vite\` 插件</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	\`\`\`ts</span></span>
<span class="line"><span>	import { defineConfig } from &#39;vite&#39;</span></span>
<span class="line"><span>	import tailwindcss from &#39;@tailwindcss/vite&#39;  // step1</span></span>
<span class="line"><span>	export default defineConfig({</span></span>
<span class="line"><span>	  plugins: [</span></span>
<span class="line"><span>	    tailwindcss(),                           // step2</span></span>
<span class="line"><span>	  ],</span></span>
<span class="line"><span>	})</span></span>
<span class="line"><span>	\`\`\`</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>3. 在 CSS 文件中导入 Tailwind CSS。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	\`\`\`css</span></span>
<span class="line"><span>	@import &quot;tailwindcss&quot;;</span></span>
<span class="line"><span>	\`\`\`</span></span>
<span class="line"><span>---</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tab: PostCSS</span></span>
<span class="line"><span>1. 通过 npm 安装 \`tailwindcss\`, \`@tailwindcss/postcss\`, \`postcss\` 。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	\`\`\`sh</span></span>
<span class="line"><span>	npm install tailwindcss @tailwindcss/postcss postcss</span></span>
<span class="line"><span>	\`\`\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2. 增添 \`@tailwindcss/postcss\` 在 \`postcss.config.mjs\` 文件中，或者其他项目配置。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	\`\`\`ts</span></span>
<span class="line"><span>	export default {</span></span>
<span class="line"><span>	  plugins: {</span></span>
<span class="line"><span>	    &quot;@tailwindcss/postcss&quot;: {},</span><span>  // add</span></span>
<span class="line"><span>	  }</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>	\`\`\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3. 在 CSS 文件中导入 Tailwind CSS。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	\`\`\`css</span></span>
<span class="line"><span>	@import &quot;tailwindcss&quot;;</span></span>
<span class="line"><span>	\`\`\`</span></span>
<span class="line"><span>---</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tab: Tailwind CLI  </span></span>
<span class="line"><span>1. 通过 npm 安装 \`tailwindcss\` 和 \`@tailwindcss/cli\` 。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	\`\`\`sh</span></span>
<span class="line"><span>	npm install tailwindcss @tailwindcss/cli</span></span>
<span class="line"><span>	\`\`\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2. 在 CSS 文件中导入 Tailwind CSS。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	\`\`\`css</span></span>
<span class="line"><span>	@import &quot;tailwindcss&quot;;</span></span>
<span class="line"><span>	\`\`\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3. 启动 Tailwind CLI 构建进程</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	\`\`\`sh</span></span>
<span class="line"><span>	npx @tailwindcss/cli -i ./src/input.css -o ./src/output.css --watch</span></span>
<span class="line"><span>	\`\`\`</span></span>
<span class="line"><span>---</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tab: 其他框架</span></span>
<span class="line"><span>[Framework guides - Tailwind CSS](https://tailwindcss.com/docs/installation/framework-guides)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>---</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tab: Play CDN</span></span>
<span class="line"><span>在浏览器中使用Play CDN尝试，而无需任何构建步骤。Play CDN是专为开发环境而设计的，而非生产环境。</span></span>
<span class="line"><span>1. 在 HTML 文件的 \`&lt;head&gt;\` 标签中使用 script 导入。</span></span>
<span class="line"><span>2. 使用 \`type=&quot;text/tailwindcss&quot;\` 以支持更多 Tailwind CSS 特性。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`\`\`html</span></span>
<span class="line"><span>&lt;!doctype html&gt;</span></span>
<span class="line"><span>&lt;html&gt;</span></span>
<span class="line"><span>  &lt;head&gt;</span></span>
<span class="line"><span>    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span></span>
<span class="line"><span>    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;</span></span>
<span class="line"><span>    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span>    &lt;style type=&quot;text/tailwindcss&quot;&gt;</span></span>
<span class="line"><span>      @theme {</span></span>
<span class="line"><span>        --color-clifford: #da373d;</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    &lt;/style&gt;</span></span>
<span class="line"><span>  &lt;/head&gt;</span></span>
<span class="line"><span>  &lt;body&gt;</span></span>
<span class="line"><span>    &lt;h1 class=&quot;text-3xl font-bold underline text-clifford&quot;&gt;</span></span>
<span class="line"><span>      Hello world!</span></span>
<span class="line"><span>    &lt;/h1&gt;</span></span>
<span class="line"><span>  &lt;/body&gt;</span></span>
<span class="line"><span>&lt;/html&gt;</span></span>
<span class="line"><span>\`\`\`</span></span>
<span class="line"><span>---</span></span></code></pre></div><h3 id="插件" tabindex="-1">插件 <a class="header-anchor" href="#插件" aria-label="Permalink to &quot;插件&quot;">​</a></h3><div class="tip custom-block github-alert"><p class="custom-block-title">编辑器插件</p><p></p><ol><li>IntelliSense for VS Code</li></ol><ul><li><strong>Autocomplete</strong></li><li><strong>Linting</strong></li><li><strong>Hover previews</strong></li><li><strong>Syntax highlighting</strong></li></ul><ol><li>Class sorting with Prettier</li></ol><ul><li><strong>类名顺序格式化</strong></li></ul></div><h3 id="兼容性" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><p>Tailwind CSS v4.0 是为现代浏览器设计和测试的，框架的核心功能特别取决于这些浏览器版本：</p><ul><li><strong>Chrome 111</strong> <em>(released March 2023)</em></li><li><strong>Safari 16.4</strong> <em>(released March 2023)</em></li><li><strong>Firefox 128</strong> <em>(released July 2024)</em></li></ul><hr><h2 id="核心概念" tabindex="-1">核心概念 <a class="header-anchor" href="#核心概念" aria-label="Permalink to &quot;核心概念&quot;">​</a></h2><h3 id="使用工具类进行样式设置" tabindex="-1">使用工具类进行样式设置 <a class="header-anchor" href="#使用工具类进行样式设置" aria-label="Permalink to &quot;使用工具类进行样式设置&quot;">​</a></h3><p>Tailwind CSS 通过组合单一职责的实用类直接在 HTML 中构建样式，颠覆传统 CSS 开发模式，强调高效、可维护与一致性。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mx-auto flex max-w-sm items-center gap-x-4 rounded-xl bg-white p-6 shadow-lg outline outline-black/5 dark:bg-slate-800 dark:shadow-none dark:-outline-offset-1 dark:outline-white/10&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;size-12 shrink-0&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/img/logo.svg&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ChitChat Logo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-xl font-medium text-black dark:text-white&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;ChitChat&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-gray-500 dark:text-gray-400&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;You have a new message!&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>例如，在上述 UI 组件中，我们通过组合不同功能的实用类实现设计：</p><ol><li>​<strong>​布局控制​</strong>​<br> 显示与内边距类（<code>flex</code>、<code>shrink-0</code>、<code>p-6</code>）：建立弹性布局模型，固定子元素收缩属性，设置整体内边距。</li><li>​<strong>​容器约束​</strong>​<br> 最大宽度与边距类（<code>max-w-sm</code>、<code>mx-auto</code>）：限制卡片最大宽度为小尺寸，通过水平自动边距实现居中。</li><li>​<strong>​视觉装饰​</strong>​<br> 背景色/圆角/阴影类（<code>bg-white</code>、<code>rounded-xl</code>、<code>shadow-lg</code>）：定义纯白背景，添加大圆角与柔和投影增强立体感。</li><li>​<strong>​尺寸规范​</strong>​<br> 宽高尺寸类（<code>size-12</code>）：统一设置 Logo 图像的固定 12 单位宽高（等价于 <code>w-12 h-12</code>）。</li><li>​<strong>​元素间距​</strong>​<br> 横向间距类（<code>gap-x-4</code>）：在 Logo 与文本列之间创建 4 单位间隔，替代传统 margin 方案。</li><li>​<strong>​文字表现​</strong>​<br> 字号/字色/字重类（<code>text-xl</code>、<code>text-black</code>、<code>font-medium</code> 等）：通过加大字号、纯黑字体、中等字重构建清晰层级关系。</li></ol><p>以这种方式设置样式与许多传统的最佳实践相矛盾，但一旦你尝试，你就会很快注意到一些非常重要的好处：</p><ul><li><p><strong>可以更快地完成工作</strong> -- 你无需花时间想出类名、做出选择器决定或在 HTML 和 CSS 文件之间切换，因此你的设计可以非常快速地组合在一起。</p></li><li><p><strong>进行更改感觉更安全</strong> -- 向元素添加或删除工具类只会影响该元素，因此你永远不必担心意外破坏使用相同 CSS 的另一个页面。</p></li><li><p><strong>维护旧项目更容易</strong> -- 更改某些内容仅意味着在项目中找到该元素并更改类，而不是试图记住你六个月未碰过的所有自定义 CSS 的工作方式。</p></li><li><p><strong>代码更具可移植性</strong> -- 由于结构和样式都位于同一位置，你可以轻松地复制和粘贴整个 UI 块，即使在不同的项目之间也是如此。</p></li><li><p><strong>CSS 规模停止增长</strong> -- 由于工具类是如此可重用，因此你的 CSS 不会随着你向项目添加的每个新功能而继续线性增长。</p></li></ul><hr><h3 id="悬停、焦点及其他交互状态" tabindex="-1">悬停、焦点及其他交互状态 <a class="header-anchor" href="#悬停、焦点及其他交互状态" aria-label="Permalink to &quot;悬停、焦点及其他交互状态&quot;">​</a></h3><p>Tailwind 中的每个工具类都可以通过在类名开头添加<strong>变体 (variant)</strong> 来有条件地应用，该变体描述了你要定位的条件。</p><p>Tailwind 包含几乎所有你所需的变体，包括：</p><ul><li><strong>伪类</strong>，如 <code>:hover</code>、<code>:focus</code>、<code>:first-child</code> 和 <code>:required</code></li><li><strong>伪元素</strong>，如 <code>::before</code>、<code>::after</code>、<code>::placeholder</code> 和 <code>::selection</code></li><li><strong>媒体和特性查询</strong>，如响应式断点，夜间模式，还有 <code>prefers-reduced-motion</code></li><li><strong>属性选择器</strong>，像 <code>[dir=&quot;rtl&quot;]</code> 和 <code>[open]</code></li><li><strong>子选择器</strong>，像 <code>&amp; &gt; *</code> 和 <code>&amp; *</code></li></ul><p>具体见 <a href="./Tailwind快查表.html">Tailwind快查表</a></p><hr><h3 id="响应式设计" tabindex="-1">响应式设计 <a class="header-anchor" href="#响应式设计" aria-label="Permalink to &quot;响应式设计&quot;">​</a></h3><p>Tailwind 中的每个工具类都可以在不同的断点处有条件地应用，这使得在不离开 HTML 的情况下构建复杂的响应式界面变得轻而易举。<br> 首先，确保你已将 <a href="https://web.nodejs.cn/en-US/docs/Web/HTML/Viewport_meta_tag" target="_blank" rel="noreferrer">视口元标记</a> 添加到文档的 <code>&lt;head&gt;</code> 中：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;viewport&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><p>然后，要添加工具但只让它在某个断点生效，你需要做的就是在工具前面加上断点名称，后跟 <code>:</code> 字符：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- Width of 16 by default, 32 on medium screens, and 48 on large screens --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;w-16 md:w-32 lg:w-48&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><p>受常见设备分辨率的启发，默认有五个断点：</p><table tabindex="0"><thead><tr><th>Breakpoint prefix</th><th>Minimum width</th><th>CSS</th></tr></thead><tbody><tr><td><code>sm</code></td><td>40rem <em>(640px)</em></td><td><code>@media (width &gt;= 40rem) { ... }</code></td></tr><tr><td><code>md</code></td><td>48rem <em>(768px)</em></td><td><code>@media (width &gt;= 48rem) { ... }</code></td></tr><tr><td><code>lg</code></td><td>64rem <em>(1024px)</em></td><td><code>@media (width &gt;= 64rem) { ... }</code></td></tr><tr><td><code>xl</code></td><td>80rem <em>(1280px)</em></td><td><code>@media (width &gt;= 80rem) { ... }</code></td></tr><tr><td><code>2xl</code></td><td>96rem <em>(1536px)</em></td><td><code>@media (width &gt;= 96rem) { ... }</code></td></tr></tbody></table><ul><li><h6 id="针对断点范围-targeting-a-breakpoint-range" tabindex="-1">针对断点范围 (Targeting a breakpoint range) <a class="header-anchor" href="#针对断点范围-targeting-a-breakpoint-range" aria-label="Permalink to &quot;针对断点范围 (Targeting a breakpoint range)&quot;">​</a></h6></li></ul><p>默认情况下，由 <code>md:flex</code> 等规则应用的样式将应用于该断点并在较大的断点处保持应用。<br> 如果你希望仅在特定断点范围处于活动状态时应用工具，请将响应式变体（如 <code>md</code>）与 <code>max-*</code> 变体堆叠在一起，以将该样式限制在特定范围内：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;md:max-xl:flex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>Tailwind 为每个断点生成相应的 <code>max-*</code> 变体：</p><table tabindex="0"><thead><tr><th>Variant</th><th>Media query</th></tr></thead><tbody><tr><td><code>max-sm</code></td><td><code>@media (width &lt; 40rem) { ... }</code></td></tr><tr><td><code>max-md</code></td><td><code>@media (width &lt; 48rem) { ... }</code></td></tr><tr><td><code>max-lg</code></td><td><code>@media (width &lt; 64rem) { ... }</code></td></tr><tr><td><code>max-xl</code></td><td><code>@media (width &lt; 80rem) { ... }</code></td></tr><tr><td><code>max-2xl</code></td><td><code>@media (width &lt; 96rem) { ... }</code></td></tr></tbody></table><ul><li><h6 id="使用自定义断点-using-custom-breakpoints" tabindex="-1">使用自定义断点 (Using custom breakpoints) <a class="header-anchor" href="#使用自定义断点-using-custom-breakpoints" aria-label="Permalink to &quot;使用自定义断点 (Using custom breakpoints)&quot;">​</a></h6></li></ul><p>使用 <code>--breakpoint-*</code> 主题变量自定义断点：​​</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --breakpoint-xs: 30rem;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --breakpoint-2xl: 100rem;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --breakpoint-3xl: 120rem;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这会更新 <code>2xl</code> 断点以使用 <code>100rem</code> 而不是默认的 <code>96rem</code>，并创建可在标记中使用的新 <code>xs</code> 和 <code>3xl</code> 断点。<br> 要删除默认断点，请将其值重置为 <code>initial</code> 关键字：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --breakpoint-2xl: initial;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --breakpoint-</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: initial;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 重置所有断点*/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如果你需要使用一次性的断点（该断点不适合包含在主题中），请使用 <code>min</code> 或 <code>max</code> 变体使用任意值动态生成自定义断点。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">max-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[600</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]:</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bg-sky-300</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> min-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[320</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]:</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">text-center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;!-- ... --</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><h6 id="容器查询-container-queries" tabindex="-1">容器查询 (Container queries) <a class="header-anchor" href="#容器查询-container-queries" aria-label="Permalink to &quot;容器查询 (Container queries)&quot;">​</a></h6></li></ul><div class="note custom-block github-alert"><p class="custom-block-title">什么是容器查询？</p><p><strong>容器查询</strong> 是一项现代 CSS 功能，可让你==根据父元素的大小而不是整个视口的大小来设置样式==。它们让你可以构建更便携和可重用的组件，因为它们可以根据该组件可用的实际空间进行更改。</p></div><p>使用 <code>@container</code> 类将元素标记为容器，然后使用 <code>@sm</code> 和 <code>@md</code> 等变体根据大小设置子元素的样式容器：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;flex flex-col @md:flex-row&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>最大宽度容器查询</strong>：使用 <code>@max-sm</code> 和 <code>@max-md</code> 等变体来应用特定容器大小以下的样式：</p><div class="language-HTML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;flex flex-row @max-md:flex-col&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- ... --&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>容器查询范围</strong>：将常规容器查询变体与最大宽度容器查询变体堆叠以定位特定范围：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;flex flex-row @sm:@max-md:flex-col&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>命名容器</strong>：对于使用多个嵌套容器的复杂设计，你可以使用 <code>@container/{name}</code> 命名容器，并使用 <code>@sm/{name}</code> 和 <code>@md/{name}</code> 等变体定位特定容器：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@container/main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;flex flex-row @sm/main:flex-col&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="@container/main"><div class="flex flex-row @sm/main:flex-col"></div></div> 这使得可以根据远处容器的大小（而不仅仅是最近的容器）来设置样式。 <p><strong>使用自定义容器大小</strong>：使用 <code>--container-*</code> 主题变量自定义容器大小：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --container-8xl: 96rem;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>使用任意值</strong>：使用 <code>@min-[475px]</code> 和 <code>@max-[960px]</code> 等变体来处理你不想添加到主题中的一次性容器查询大小：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;flex flex-col @min-[475px]:flex-row&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>使用容器查询单元</strong>：在其他工具类中使用 <a href="https://web.nodejs.cn/en-US/docs/Web/CSS/CSS_containment/Container_queries#container_query_length_units" target="_blank" rel="noreferrer">容器查询长度单位</a>（如 <code>cqw</code>）作为任意值来引用容器大小：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;w-[50cqw]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><hr><h3 id="夜间模式" tabindex="-1">夜间模式 <a class="header-anchor" href="#夜间模式" aria-label="Permalink to &quot;夜间模式&quot;">​</a></h3><p>既然夜间模式是许多操作系统的一流功能，设计网站的深色版本以配合默认设计变得越来越普遍。</p><p>为了尽可能简化此操作，Tailwind 包含一个 <code>dark</code> 变体，可让你在启用夜间模式时以不同方式设置网站样式。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-white dark:bg-gray-800 rounded-lg px-6 py-8 ring shadow-xl ring-gray-900/5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h3</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-gray-900 dark:text-white mt-5 text-base font-medium tracking-tight &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Writes upside-down&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-gray-500 dark:text-gray-400 mt-2 text-sm &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	  The Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>默认情况下使用 <code>prefers-color-scheme</code> CSS 媒体特性，但你也可以通过覆盖深色变体来构建支持 <strong>手动切换夜间模式</strong> 的站点。</p><p>如果你希望深色主题由 CSS 选择器而不是 <code>prefers-color-scheme</code> 媒体查询驱动，请覆盖 <code>dark</code> 变体以使用你的自定义选择器：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@custom-variant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dark (&amp;:where(.dark, .dark *));</span></span></code></pre></div><p>现在，<code>dark:*</code> 工具不再基于 <code>prefers-color-scheme</code> 应用，而是在 HTML 树中较早出现 <code>dark</code> 类时应用它们：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dark&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-white dark:bg-black&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>如何将 <code>dark</code> 类添加到 <code>html</code> 元素取决于你，但一种常见的方法是使用一些 JavaScript 来更新 <code>class</code> 属性并将该首选项同步到 <code>localStorage</code> 之类的地方。</p><p><strong>使用数据属性</strong>：要使用数据属性而不是类来激活夜间模式，只需使用属性选择器覆盖 <code>dark</code> 变体</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@custom-variant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dark (&amp;:where([data-theme=dark], [data-theme=dark] *));</span></span></code></pre></div><p>现在，只要在树的某处将 <code>data-theme</code> 属性设置为 <code>dark</code>，就会应用夜间模式工具：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> data-theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dark&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-white dark:bg-black&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>使用系统主题支持</strong>：要构建支持亮模式、夜间模式和系统主题的三向主题切换，请使用自定义夜间模式选择器和 <a href="https://web.nodejs.cn/en-US/docs/Web/API/Window/matchMedia" target="_blank" rel="noreferrer"><code>window.matchMedia()</code> </a> 来检测系统主题并在需要时更新 <code>html</code> 元素。</p><p>这是一个简单的示例，说明如何支持亮模式、夜间模式以及尊重操作系统首选项：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.documentElement.classList.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toggle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;dark&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  localStorage.theme </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;dark&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;theme&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> localStorage) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">matchMedia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;(prefers-color-scheme: dark)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).matches),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Whenever the user explicitly chooses light mode</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localStorage.theme </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;light&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Whenever the user explicitly chooses dark mode</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localStorage.theme </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;dark&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Whenever the user explicitly chooses to respect the OS preference</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;theme&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><hr><h3 id="主题变量" tabindex="-1">主题变量 <a class="header-anchor" href="#主题变量" aria-label="Permalink to &quot;主题变量&quot;">​</a></h3><p>Tailwind 是一个用于构建自定义设计的框架，不同的设计需要不同的排版、颜色、阴影、断点等。</p><p>这些底层设计决策通常称为设计令牌，在 Tailwind 项目中，你将这些值存储在<strong>主题变量</strong>中。<br> 主题变量是使用 <code>@theme</code> 指令定义的特殊 CSS 变量，会影响项目中存在哪些工具类。</p><p>例如，你可以通过定义主题变量（如 <code>--color-mint-500</code>）为你的项目添加新颜色：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-mint-500: oklch(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.72</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 178);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>现在你可以在 HTML 中使用工具类，如 <code>bg-mint-500</code>、<code>text-mint-500</code> 或 <code>fill-mint-500</code>。<br> Tailwind 还会为你的主题变量生成常规 CSS 变量，以便你可以在任意值或内联样式中引用你的设计令牌：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-mint-500&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;background-color: var(--color-mint-500)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">为什么是 @theme 而不是 :root？</p><p>主题变量不仅仅是 CSS 变量 - 它们还指示 Tailwind 创建可在 HTML 中使用的新工具类。</p><p>由于它们比常规 CSS 变量功能更多，Tailwind 使用特殊语法，因此定义主题变量始终是明确的。主题变量也需要在顶层定义，而不是嵌套在其他选择器或媒体查询下，使用特殊语法可以强制执行这一点。</p><p>当你想要定义一个不打算连接到工具类的变量时，使用 :root 定义常规 CSS 变量在 Tailwind 项目中仍然很有用。当你希望设计令牌直接映射到工具类时使用 @theme，并使用 :root 定义不应具有相应工具类的常规 CSS 变量。</p></div><ul><li><h6 id="与工具类的关系" tabindex="-1">与工具类的关系 <a class="header-anchor" href="#与工具类的关系" aria-label="Permalink to &quot;与工具类的关系&quot;">​</a></h6></li></ul><p>Tailwind 中的一些工具类（如 <code>flex</code> 和 <code>object-cover</code>）是静态的，并且在各个项目之间始终相同。但许多其他效果是由主题变量驱动的，并且仅因你定义的主题变量而存在。</p><p>例如，<code>--font-*</code> 命名空间中定义的主题变量确定项目中存在的所有 <code>font-family</code> 工具：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --font-sans: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ui-sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">system-ui</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --font-serif: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ui-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --font-mono: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ui-monospace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ... */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>一些主题变量用于定义变体而不是工具。例如，<code>--breakpoint-*</code> 命名空间中的主题变量确定项目中存在哪些响应式断点变体：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --breakpoint-3xl: 120rem;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>现在你可以使用 <code>3xl:*</code> 变体仅在视口为 120rem 或更宽时触发工具：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3xl:grid-cols-6 grid grid-cols-2 md:grid-cols-4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ul><li><h6 id="主题变量命名空间" tabindex="-1">主题变量命名空间 <a class="header-anchor" href="#主题变量命名空间" aria-label="Permalink to &quot;主题变量命名空间&quot;">​</a></h6></li></ul><table tabindex="0"><thead><tr><th><strong>命名空间​</strong>​</th><th>​<strong>​工具类说明​</strong>​</th></tr></thead><tbody><tr><td><code>--color-*</code></td><td>颜色工具类，如 <code>bg-red-500</code>（背景色）、<code>text-sky-300</code>（文字色）等</td></tr><tr><td><code>--font-*</code></td><td>字体家族工具类，如 <code>font-sans</code>（无衬线字体）</td></tr><tr><td><code>--text-*</code></td><td>字体大小工具类，如 <code>text-xl</code>（超大文字）</td></tr><tr><td><code>--font-weight-*</code></td><td>字体粗细工具类，如 <code>font-bold</code>（粗体）</td></tr><tr><td><code>--tracking-*</code></td><td>字母间距工具类，如 <code>tracking-wide</code>（宽间距）</td></tr><tr><td><code>--leading-*</code></td><td>行高工具类，如 <code>leading-tight</code>（紧凑行高）</td></tr><tr><td><code>--breakpoint-*</code></td><td>响应式断点变体，如 <code>sm:*</code>（小屏幕适配）</td></tr><tr><td><code>--container-*</code></td><td>容器查询变体（如 <code>@sm:*</code>）和尺寸工具类（如 <code>max-w-md</code>，最大宽度中等）</td></tr><tr><td><code>--spacing-*</code></td><td>间距与尺寸工具类，如 <code>px-4</code>（横向内边距）、<code>max-h-16</code>（最大高度）等</td></tr><tr><td><code>--radius-*</code></td><td>边框圆角工具类，如 <code>rounded-sm</code>（小圆角）</td></tr><tr><td><code>--shadow-*</code></td><td>盒子阴影工具类，如 <code>shadow-md</code>（中等阴影）</td></tr><tr><td><code>--inset-shadow-*</code></td><td>内阴影工具类，如 <code>inset-shadow-xs</code>（超小内阴影）</td></tr><tr><td><code>--drop-shadow-*</code></td><td>投影滤镜工具类，如 <code>drop-shadow-md</code>（中等投影）</td></tr><tr><td><code>--blur-*</code></td><td>模糊滤镜工具类，如 <code>blur-md</code>（中等模糊）</td></tr><tr><td><code>--perspective-*</code></td><td>透视工具类，如 <code>perspective-near</code>（近视角透视）</td></tr><tr><td><code>--aspect-*</code></td><td>宽高比工具类，如 <code>aspect-video</code>（视频比例宽高比）</td></tr><tr><td><code>--ease-*</code></td><td>过渡时间函数工具类，如 <code>ease-out</code>（缓出效果）</td></tr><tr><td><code>--animate-*</code></td><td>动画工具类，如 <code>animate-spin</code>（旋转动画）</td></tr></tbody></table><ul><li><h6 id="默认主题变量" tabindex="-1">默认主题变量 <a class="header-anchor" href="#默认主题变量" aria-label="Permalink to &quot;默认主题变量&quot;">​</a></h6></li></ul><p>当你在 CSS 文件顶部导入 <code>tailwindcss</code> 时，它包含一组默认主题变量来帮助你入门。<br> 以下是导入 <code>tailwindcss</code> 时实际导入的内容：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> theme, base, components, utilities;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./theme.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer(theme);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./preflight.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer(base);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./utilities.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer(utilities);</span></span></code></pre></div><p>该 <code>theme.css</code> 文件包含默认调色板、类型比例、阴影、字体等。<br> 这就是为什么像 <code>bg-red-200</code>、<code>font-serif</code> 和 <code>shadow-sm</code> 这样的工具开箱即用的原因 - 它们由默认主题驱动，而不是像 <code>flex-col</code> 或 <code>pointer-events-none</code> 那样硬编码到框架中。</p><p>有关所有默认主题变量的列表，请参阅 <a href="./Tailwind快查表.html#默认主题变量参考">默认主题变量参考</a></p><ul><li><h6 id="自定义主题" tabindex="-1">自定义主题 <a class="header-anchor" href="#自定义主题" aria-label="Permalink to &quot;自定义主题&quot;">​</a></h6></li></ul><p>默认主题变量非常通用，适合构建截然不同的设计，但它们仍然只是一个起点。自定义调色板、字体和阴影等内容以构建你心中的设计是很常见的。</p><p><strong>扩展默认主题</strong>：使用 <code>@theme</code> 定义新主题变量并扩展默认主题：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --font-script: Great Vibes, cursive;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这使得你可以在 HTML 中使用新的 <code>font-script</code> 工具类，就像默认的 <code>font-sans</code> 或 <code>font-mono</code> 工具一样。</p><p><strong>覆盖默认主题</strong>：通过在 <code>@theme</code> 中重新定义来覆盖默认主题变量值：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --breakpoint-sm: 30rem;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>现在 <code>sm:*</code> 变体将在 30rem 而不是默认的 40rem 视口大小下触发。<br> 要完全覆盖默认主题中的整个命名空间，请使用特殊星号语法将整个命名空间设置为 <code>initial</code>。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: initial;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-white: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">#fff;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-purple: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">#3f3cbb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-midnight: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">#121063</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-tahiti: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">#3ab7bf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-bermuda: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">#78dcca</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>要完全禁用默认主题并仅使用自定义值，请将全局主题变量命名空间设置为 <code>initial</code></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: initial;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>现在，由主题变量驱动的所有默认工具类都不可用，你只能使用与自定义主题变量。</p><ul><li><h6 id="定义动画关键帧" tabindex="-1">定义动画关键帧 <a class="header-anchor" href="#定义动画关键帧" aria-label="Permalink to &quot;定义动画关键帧&quot;">​</a></h6></li></ul><p>在 <code>@theme</code> 中为你的 <code>--animate-*</code> 主题变量定义 <code>@keyframes</code> 规则，以将它们包含在生成的 CSS 中：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --animate-fade-in-scale: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">fade-in-scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.3s</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> ease-out</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @keyframes</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> fade-in-scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    0%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.95</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如果你希望即使不添加 <code>--animate-*</code> 主题变量也始终包含自定义 <code>@keyframes</code> 规则，请在 <code>@theme</code> 之外定义它们。</p><ul><li><h6 id="引用其他变量" tabindex="-1">引用其他变量 <a class="header-anchor" href="#引用其他变量" aria-label="Permalink to &quot;引用其他变量&quot;">​</a></h6></li></ul><p>定义引用其他变量的主题变量时，请使用 <code>inline</code> 选项：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> inline {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --font-sans: var(--font-inter);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>使用 <code>inline</code> 选项，工具类将使用主题变量值而不是引用实际主题变量。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.font-sans</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--font-inter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如果不使用 <code>inline</code>，你的工具类可能会解析为意外值，因为变量在 CSS 中的解析方式不同。</p><ul><li><h6 id="生成所有-css-变量" tabindex="-1">生成所有 CSS 变量 <a class="header-anchor" href="#生成所有-css-变量" aria-label="Permalink to &quot;生成所有 CSS 变量&quot;">​</a></h6></li></ul><p>默认情况下，最终 CSS 输出中只会生成使用的 CSS 变量。如果你想要始终生成所有 CSS 变量，可以使用 <code>static</code> 主题选项：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> static {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-primary: var(--color-red-500);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-secondary: var(--color-blue-500);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><h6 id="跨项目共享" tabindex="-1">跨项目共享 <a class="header-anchor" href="#跨项目共享" aria-label="Permalink to &quot;跨项目共享&quot;">​</a></h6></li></ul><p>由于主题变量是在 CSS 中定义的，因此在项目之间共享它们只需将它们放入你可以在每个项目中导入的自己的 CSS 文件中。然后，你可以使用 <code>@import</code> 将你的主题变量包含在其他项目中</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;../brand/theme.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>你可以将这样的共享主题变量放在 monorepo 设置中的自己的包中，甚至可以将它们发布到 NPM 并像任何其他第三方 CSS 文件一样导入它们。</p><ul><li><h6 id="使用主题变量" tabindex="-1">使用主题变量 <a class="header-anchor" href="#使用主题变量" aria-label="Permalink to &quot;使用主题变量&quot;">​</a></h6></li></ul><p>编译 CSS 时，所有主题变量都会转换为常规 CSS 变量：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --font-sans</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ui-sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">system-ui</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Apple Color Emoji&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Segoe UI Emoji&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Segoe UI Symbol&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Noto Color Emoji&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --font-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ui-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Georgia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Cambria, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Times New Roman&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Times</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --font-mono</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ui-monospace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, SFMono-Regular, Menlo, Monaco, Consolas, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Liberation Mono&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Courier New&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">monospace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --color-red-50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">oklch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.971</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.013</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 17.38</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --color-red-100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">oklch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.936</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.032</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 17.717</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --color-red-200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">oklch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.885</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.062</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18.334</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ... */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --shadow-2xs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rgb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --shadow-xs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rgb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --shadow-sm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rgb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rgb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ... */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这使得在任何自定义 CSS 或内联样式中引用所有设计标记变得容易。</p><ul><li><h6 id="使用自定义-css" tabindex="-1">使用自定义 CSS <a class="header-anchor" href="#使用自定义-css" aria-label="Permalink to &quot;使用自定义 CSS&quot;">​</a></h6></li></ul><p>在编写需要使用相同值的自定义 CSS 时，使用主题变量来访问设计令牌：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> components {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .typography</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--text-base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-gray-700</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--text-2xl--line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      font-weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--font-weight-semibold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-gray-950</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--text-xl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      font-weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--font-weight-semibold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-gray-950</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这在设置你无法控制的 HTML 样式时通常很有用，例如来自数据库或 API 并渲染为 HTML 的 Markdown 内容。</p><ul><li><h6 id="使用任意值" tabindex="-1">使用任意值 <a class="header-anchor" href="#使用任意值" aria-label="Permalink to &quot;使用任意值&quot;">​</a></h6></li></ul><p>使用任意值的主题变量可能很有用，尤其是与 <code>calc()</code> 函数结合使用时。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;relative rounded-xl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;absolute inset-px rounded-[calc(var(--radius-xl)-1px)]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>在上面的例子中，我们从嵌套插入元素的 <code>--radius-xl</code> 值中减去 1px，以确保它具有同心边框半径。</p><ul><li><h6 id="在-javascript-中引用" tabindex="-1">在 JavaScript 中引用 <a class="header-anchor" href="#在-javascript-中引用" aria-label="Permalink to &quot;在 JavaScript 中引用&quot;">​</a></h6></li></ul><p>大多数情况下，当你需要在 JS 中引用主题变量时，你可以直接使用 CSS 变量，就像任何其他 CSS 值一样。<br> 例如，流行的 React 运动库允许你为 CSS 变量值设置动画：</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">motion.div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> animate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ backgroundColor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;var(--color-blue-500)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }} /&gt;</span></span></code></pre></div><p>如果你需要访问 JS 中已解析的 CSS 变量值，则可以使用 <code>getComputedStyle</code> 获取文档根目录中主题变量的值：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> styles </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getComputedStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document.documentElement);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> shadow </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> styles.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPropertyValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--shadow-xl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><hr><h3 id="颜色" tabindex="-1">颜色 <a class="header-anchor" href="#颜色" aria-label="Permalink to &quot;颜色&quot;">​</a></h3><p>在 Tailwind CSS 项目中使用和自定义调色板。</p><p>Tailwind CSS 包含一个开箱即用的丰富、美丽的调色板，由专业设计师精心制作，适用于各种不同的设计风格。<br><img src="`+l+`" alt=""></p><p>默认调色板中的每种颜色都包含 11 个步长，其中 50 最浅，950 最深：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-sky-50&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-sky-100&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-sky-200&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-sky-300&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-sky-400&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-sky-500&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-sky-600&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-sky-700&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-sky-800&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-sky-900&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-sky-950&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>整个调色板可用于所有与颜色相关的工具，包括 <a href="https://tailwind.nodejs.cn/docs/background-color" target="_blank" rel="noreferrer">背景颜色</a>、<a href="https://tailwind.nodejs.cn/docs/border-color" target="_blank" rel="noreferrer">边框颜色</a>、<a href="https://tailwind.nodejs.cn/docs/fill" target="_blank" rel="noreferrer">fill</a>、<a href="https://tailwind.nodejs.cn/docs/caret-color" target="_blank" rel="noreferrer">插入符号颜色</a> 等。</p><ul><li><h6 id="颜色工具类" tabindex="-1">颜色工具类 <a class="header-anchor" href="#颜色工具类" aria-label="Permalink to &quot;颜色工具类&quot;">​</a></h6></li></ul><table tabindex="0"><thead><tr><th>​<strong>​工具类​</strong>​</th><th>​<strong>​功能描述​</strong>​</th></tr></thead><tbody><tr><td><code>bg-*</code></td><td>设置元素的背景颜色</td></tr><tr><td><code>text-*</code></td><td>设置元素的文字颜色</td></tr><tr><td><code>decoration-*</code></td><td>设置元素的文字装饰颜色（如下划线、删除线颜色）</td></tr><tr><td><code>border-*</code></td><td>设置元素的边框颜色</td></tr><tr><td><code>outline-*</code></td><td>设置元素的轮廓颜色（聚焦状态外框）</td></tr><tr><td><code>shadow-*</code></td><td>设置盒子阴影的颜色</td></tr><tr><td><code>inset-shadow-*</code></td><td>设置内嵌盒子阴影的颜色</td></tr><tr><td><code>ring-*</code></td><td>设置环形阴影的颜色（常用于聚焦指示）</td></tr><tr><td><code>inset-ring-*</code></td><td>设置内嵌环形阴影的颜色</td></tr><tr><td><code>accent-*</code></td><td>设置表单控件（如复选框、单选框）的强调色</td></tr><tr><td><code>caret-*</code></td><td>设置表单控件（如输入框）中光标的颜色</td></tr><tr><td><code>fill-*</code></td><td>设置 SVG 元素的填充颜色</td></tr><tr><td><code>stroke-*</code></td><td>设置 SVG 元素的描边颜色</td></tr></tbody></table><ul><li><h6 id="调整透明度" tabindex="-1">调整透明度 <a class="header-anchor" href="#调整透明度" aria-label="Permalink to &quot;调整透明度&quot;">​</a></h6></li></ul><p>你可以使用 <code>bg-black/75</code> 之类的语法调整颜色的透明度，其中 <code>75</code> 将颜色的 alpha 通道设置为 75%，此语法还支持任意值和 CSS 变量简写。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bg-sky-500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/10&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bg-sky-500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/20&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bg-sky-500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/30&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bg-sky-500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/40&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bg-sky-500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/50&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bg-sky-500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/60&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bg-sky-500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/70&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bg-sky-500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/80&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bg-sky-500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/90&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bg-sky-500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/100&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bg-pink-500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/[71.37%]&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!-- ... --</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bg-cyan-400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/(--my-alpha-value)&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!-- ... --</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><h6 id="在-css-中引用" tabindex="-1">在 CSS 中引用 <a class="header-anchor" href="#在-css-中引用" aria-label="Permalink to &quot;在 CSS 中引用&quot;">​</a></h6></li></ul><p>颜色在 <code>--color-*</code> 命名空间中作为 CSS 变量公开，因此你可以使用 <code>--color-blue-500</code> 和 <code>--color-pink-700</code> 等变量在 CSS 中引用它们：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> components {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .typography</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-gray-950</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-blue-500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &amp;:hover {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-blue-800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>你还可以在工具类中将它们用作任意值：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-[light-dark(var(--color-white),var(--color-gray-950))]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>为了在 CSS 中将颜色引用为变量时快速调整颜色的透明度，Tailwind 包含一个特殊的 <code>--alpha()</code> 函数：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> components {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .DocSearch-Hit--Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: --alpha(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-gray-950</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><h6 id="自定义颜色" tabindex="-1">自定义颜色 <a class="header-anchor" href="#自定义颜色" aria-label="Permalink to &quot;自定义颜色&quot;">​</a></h6></li></ul><p>使用 <code>@theme</code> 在 <code>--color-*</code> 主题命名空间：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-midnight: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">#121063</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-tahiti: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">#3ab7bf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-bermuda: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">#78dcca</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>现在，除了默认颜色外，你的项目中还将提供 <code>bg-midnight</code>、<code>text-tahiti</code> 和 <code>fill-bermuda</code> 等工具。</p><p><strong>覆盖默认颜色</strong>：通过定义具有相同名称的新主题变量来覆盖任何默认颜色<br><strong>禁用默认颜色</strong>：通过将颜色的主题命名空间设置为 <code>initial</code> 来禁用任何默认颜色<br><strong>使用自定义调色板</strong>：使用 <code>--color-*: initial</code> 完全禁用所有默认颜色并定义你自己的自定义调色板<br><strong>引用其他变量</strong>：定义引用其他颜色的颜色时使用 <code>@theme inline</code></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: initial;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-white: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">#fff;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-purple: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">#3f3cbb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-midnight: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">#121063</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-tahiti: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">#3ab7bf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-bermuda: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">#78dcca</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> inline {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-canvas: var(--acme-canvas-color);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h3 id="添加自定义样式" tabindex="-1">添加自定义样式 <a class="header-anchor" href="#添加自定义样式" aria-label="Permalink to &quot;添加自定义样式&quot;">​</a></h3><p>在 Tailwind 项目中添加你自己的自定义样式的最佳实践。</p><ul><li><h6 id="自定义主题-1" tabindex="-1">自定义主题 <a class="header-anchor" href="#自定义主题-1" aria-label="Permalink to &quot;自定义主题&quot;">​</a></h6></li></ul><p>如果你想要更改调色板、间距比例、排版比例或断点等内容，请使用 CSS 中的 <code>@theme</code> 指令添加自定义项：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --font-display: &quot;Satoshi&quot;, &quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --breakpoint-3xl: 120rem;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-avocado-100: oklch(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.99</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0 0);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-avocado-200: oklch(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.98</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.04</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 113</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-avocado-300: oklch(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.94</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 115</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-avocado-400: oklch(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.92</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.19</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 114</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.08</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-avocado-500: oklch(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.84</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 117</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.33</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-avocado-600: oklch(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.53</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 118</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.34</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --ease-fluid: cubic-bezier(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, 0, 0, 1);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --ease-snappy: cubic-bezier(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, 0, 0, 1);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ... */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><h6 id="使用任意值-1" tabindex="-1">使用任意值 <a class="header-anchor" href="#使用任意值-1" aria-label="Permalink to &quot;使用任意值&quot;">​</a></h6></li></ul><p>虽然你通常可以使用一组受限的设计标记来构建大量精心设计的设计，但有时你需要突破这些限制以获得像素完美的东西。</p><p>当你发现自己真的需要像 <code>top: 117px</code> 这样的东西来在正确的位置获得背景图片时，使用 Tailwind 的方括号符号来动态生成一个具有任意值的类：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;top-[117px]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>这基本上类似于内联样式，主要好处是你可以将它与交互式修饰符（如 <code>hover</code>）和响应式修饰符（如 <code>lg</code>）结合使用：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;top-[117px] lg:top-[344px]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>这适用于框架中的所有内容，包括背景颜色、字体大小、伪元素内容等：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-[#bada55] text-[22px] before:content-[&#39;Festivus&#39;]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>如果你将 CSS 变量引用为任意值，则可以使用自定义属性语法：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fill-(--my-brand-color) ...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ul><li><h6 id="任意属性" tabindex="-1">任意属性 <a class="header-anchor" href="#任意属性" aria-label="Permalink to &quot;任意属性&quot;">​</a></h6></li></ul><p>如果你需要使用 Tailwind 不包含开箱即用工具的 CSS 属性，你还可以使用方括号表示法来编写完全任意的 CSS：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[mask-type:luminance]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>这真的很像内联样式，但同样的好处是你可以使用修饰符：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[mask-type:luminance] hover:[mask-type:alpha]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>这对于 CSS 变量之类的东西也很有用，尤其是当它们需要在不同条件下更改时：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[--scroll-offset:56px] lg:[--scroll-offset:44px]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ul><li><h6 id="任意变体" tabindex="-1">任意变体 <a class="header-anchor" href="#任意变体" aria-label="Permalink to &quot;任意变体&quot;">​</a></h6></li></ul><p>任意变体类似于任意值，但用于进行即时选择器修改，就像你可以使用内置伪类变体（如 <code>hover:{utility}</code>）或响应式变体（如 <code>md:{utility}</code>）一样，但直接在 HTML 中使用方括号表示法。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ul</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> role</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;list&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {#each items as item}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;lg:[&amp;:nth-child(-n+3)]:hover:underline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{item}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {/each}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ul</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ul><li><h6 id="处理空格" tabindex="-1">处理空格 <a class="header-anchor" href="#处理空格" aria-label="Permalink to &quot;处理空格&quot;">​</a></h6></li></ul><p>当任意值需要包含空格时，请改用下划线 (<code>_</code>)，Tailwind 会在构建时自动将其转换为空格：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;grid grid-cols-[1fr_500px_2fr]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>在下划线很常见但空格无效的情况下，Tailwind 将保留下划线而不是将其转换为空格，例如在 URL 中：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-[url(&#39;/what_a_rush.png&#39;)]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>在极少数情况下，你实际上需要使用下划线，但由于空格也有效而导致歧义，请使用反斜杠转义下划线，Tailwind 不会将其转换为空格：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;before:content-[&#39;hello\\_world&#39;]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>如果你使用的是像 JSX 这样的东西，其中反斜杠从渲染的 HTML 中剥离，请使用 <a href="https://web.nodejs.cn/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw" target="_blank" rel="noreferrer">String.raw()</a> 这样反斜杠就不会被视为 JavaScript 转义字符：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{String.raw</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\`before:content-[</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;hello\\_world&#39;]\`}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ul><li><h6 id="解决歧义" tabindex="-1">解决歧义 <a class="header-anchor" href="#解决歧义" aria-label="Permalink to &quot;解决歧义&quot;">​</a></h6></li></ul><p>Tailwind 中的许多工具共享一个公共命名空间，但映射到不同的 CSS 属性。例如 <code>text-lg</code> 和 <code>text-black</code> 都共享 <code>text-</code> 命名空间，但一个用于 <code>font-size</code>，另一个用于 <code>color</code>。</p><p>使用任意值时，Tailwind 通常可以根据你传入的值自动处理这种歧义：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- Will generate a font-size utility --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-[22px]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;...&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- Will generate a color utility --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-[#bada55]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;...&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>有时它确实是模棱两可的，例如在使用 CSS 变量时：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-(--my-var)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;...&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>在这些情况下，你可以通过在值前添加 <a href="https://web.nodejs.cn/en-US/docs/Web/CSS/CSS_Types" target="_blank" rel="noreferrer">CSS 数据类型</a> 将基础类型 &quot;hint&quot; 为 Tailwind：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- Will generate a font-size utility --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-(length:--my-var)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;...&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- Will generate a color utility --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-(color:--my-var)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;...&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ul><li><h6 id="使用自定义-css-1" tabindex="-1">使用自定义 CSS <a class="header-anchor" href="#使用自定义-css-1" aria-label="Permalink to &quot;使用自定义 CSS&quot;">​</a></h6></li></ul><p>虽然 Tailwind 旨在满足你的大部分样式需求，但没有什么可以阻止你在需要时只编写纯 CSS：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-custom-style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ... */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>添加基本样式</strong>：如果你只想为页面设置一些默认值（如文本颜色、背景颜色或字体系列），最简单的选择就是向 <code>html</code> 或 <code>body</code> 元素添加一些类：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">doctype</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;en&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-gray-100 font-serif text-gray-900&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>这会将你的基本样式决策与所有其他样式一起保存在标记中，而不是将它们隐藏在单独的文件中。</p><p>如果你想为特定的 HTML 元素添加自己的默认基本样式，请使用 <code>@layer</code> 指令将这些样式添加到 Tailwind 的 <code>base</code> 层：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> base {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--text-2xl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--text-xl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>添加组件类</strong>：将 <code>components</code> 层用于你想要添加到你的项目中的任何更复杂的类，你仍然希望能够使用工具类覆盖这些类。<br> 传统上，这些将是像 <code>card</code>、<code>btn</code>、<code>badge</code> 这样的类。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> components {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .card</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-white</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--rounded-lg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--spacing-6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    box-shadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--shadow-xl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>通过在 <code>components</code> 层定义组件类，必要时仍然可以使用实用类来覆盖它们：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- Will look like a card, but with square corners --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;card rounded-none&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><code>components</code> 层也是为你使用的任何第三方组件放置自定义样式的好地方：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> components {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .select2-dropdown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* ... */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>使用变体</strong>：使用 <code>@variant</code> 指令在自定义 CSS 中应用 Tailwind 变体：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">white</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">variant</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">black</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*Compiled CSS**/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">white</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">media</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prefers-color-scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">black</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如果你需要同时应用多个变体，请使用嵌套：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">white</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">variant</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">variant</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">black</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*Compiled CSS**/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">white</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">media</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prefers-color-scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &amp;:hover {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      @media (hover: hover) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">black</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><h6 id="添加自定义工具" tabindex="-1">添加自定义工具 <a class="header-anchor" href="#添加自定义工具" aria-label="Permalink to &quot;添加自定义工具&quot;">​</a></h6></li></ul><p><strong>简单工具</strong>：除了使用 Tailwind 附带的工具外，你还可以添加自己的自定义工具。当你希望在项目中使用某个 CSS 功能，而 Tailwind 不包含开箱即用的工具时，这会很有用。</p><p>使用 <code>@utility</code> 指令将自定义工具添加到你的项目：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> content-auto {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  content-visibility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: auto;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>你现在可以在 HTML 中使用此工具<br> 它还可以与 <code>hover</code>、<code>focus</code> 和 <code>lg</code> 等变体一起使用：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;content-auto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">div class=&quot;hover:content-auto&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>自定义工具会与框架中的所有内置工具一起自动插入到 <code>utilities</code> 层中。</p><p><strong>复杂工具</strong>：如果你的自定义工具比单个类名更复杂，请使用嵌套来定义工具：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scrollbar-hidden {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::-webkit-scrollbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>功能工具</strong>：除了使用 <code>@utility</code> 指令注册简单工具外，你还可以注册接受参数的功能工具：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab-* {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tab-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: --value(--tab-size-</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>特殊的 <code>--value()</code> 函数用于解析效用值。</p><ol><li><p><strong>匹配主题值</strong>：使用 <code>--value(--theme-key-*)</code> 语法根据一组主题键解析实用值：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --tab-size-2: 2;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --tab-size-4: 4;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --tab-size-github: 8;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab-* {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tab-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: --value(--tab-size-</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这将匹配 <code>tab-2</code>、<code>tab-4</code> 和 <code>tab-github</code> 等工具。</p></li><li><p><strong>裸值</strong>：要将值解析为裸值，请使用 <code>--value({type})</code> 语法，其中 <code>{type}</code> 是你要将裸值验证为的数据类型：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab-* {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tab-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: --value(integer);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这将匹配 <code>tab-1</code> 和 <code>tab-76</code> 等工具。</p></li><li><p><strong>字面值</strong>：要支持字面量值，请使用 <code>--value(&#39;literal&#39;)</code> 语法（注意引号）：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab-* {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tab-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: --value(&#39;inherit&#39;, &#39;initial&#39;, &#39;unset&#39;);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这将匹配 <code>tab-inherit</code>、<code>tab-initial</code> 和 <code>tab-unset</code> 等工具。</p></li><li><p><strong>任意值</strong>：要支持任意值，请使用 <code>--value([{type}])</code> 语法（注意方括号）告诉 Tailwind 支持哪些类型作为任意值：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab-* {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tab-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: --value([</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这将匹配 <code>tab-[1]</code> 和 <code>tab-[76]</code> 等工具。如果你想要支持任何数据类型，则可以使用 <code>--value([*])</code>。</p></li><li><p><strong>同时支持主题、裸值和任意值</strong>：<code>--value()</code> 函数的所有三种形式都可以在规则中用作多个声明，并且任何无法解析的声明都将在输出中省略：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --tab-size-github: 8;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab-* {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tab-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: --value([</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tab-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: --value(integer);</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tab-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: --value(--tab-size-</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这使得可以根据需要在不同情况下以不同方式处理值，例如将裸整数转换为百分比：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> opacity-* {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  opacity: --value([</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">percentage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  opacity: calc(--value(integer) </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1%);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  opacity: --value(--opacity-</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如果你不需要在不同情况下以不同方式处理返回值，--value() 函数还可以接受多个参数并从左到右解析它们：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	--tab-size-github: 8;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab-* {  </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	tab-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: --value(--tab-size-</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, integer, [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> opacity-* {  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	opacity: calc(--value(integer) </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1%);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	opacity: --value(--opacity-</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">percentage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><strong>否定值</strong>：要支持负值，请将单独的正值和负值工具注册到单独的声明中：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> inset-* {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  inset: calc(var(--spacing) </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> --value([</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">percentage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -inset-* {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  inset: calc(var(--spacing) </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> --value([</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">percentage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -1);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><strong>修饰符</strong>：修饰符使用 <code>--modifier()</code> 函数处理，该函数的工作原理与 <code>--value()</code> 函数完全相同，但如果存在修饰符，则对其进行操作：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> text-* {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: --value(--text-</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: --modifier(--leading-</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [*]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如果不存在修饰符，则任何依赖于修饰符的声明都不会包含在输出中。</p></li><li><p><strong>分数</strong>：要处理分数，我们依赖 CSS <code>ratio</code> 数据类型。如果将其与 <code>--value()</code> 一起使用，则向 Tailwind 发送信号，将值和修饰符视为单个值：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aspect-* {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  aspect-ratio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: --value(--aspect-ratio-</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ratio, [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ratio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这将匹配 <code>aspect-square</code>、<code>aspect-3/4</code> 和 <code>aspect-[7/9]</code> 等工具。</p></li></ol><ul><li><h6 id="添加自定义变体" tabindex="-1">添加自定义变体 <a class="header-anchor" href="#添加自定义变体" aria-label="Permalink to &quot;添加自定义变体&quot;">​</a></h6></li></ul><p>除了使用 Tailwind 附带的变体之外，你还可以使用 <code>@custom-variant</code> 指令添加自己的自定义变体：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@custom-variant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> theme-midnight {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data-theme</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;midnight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">slot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>现在你可以在 HTML 中使用 <code>theme-midnight:&lt;utility&gt;</code> 变体：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> data-theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;midnight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;theme-midnight:bg-black ...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>当不需要嵌套时，你可以使用简写语法创建变体：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@custom-variant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> theme-midnight (&amp;:where([data-theme=&quot;midnight&quot;] *));</span></span></code></pre></div><p>当自定义变体具有多个规则时，它们可以相互嵌套：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@custom-variant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> any-hover {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @media</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (any-hover: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">slot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h3 id="检测源文件中的类" tabindex="-1">检测源文件中的类 <a class="header-anchor" href="#检测源文件中的类" aria-label="Permalink to &quot;检测源文件中的类&quot;">​</a></h3><p>ailwind 的工作原理是扫描项目中的工具类，然后根据你实际使用的类生成所有必要的 CSS。</p><p>这确保你的 CSS 尽可能小，也是使 <a href="https://tailwind.nodejs.cn/docs/adding-custom-styles#using-arbitrary-values" target="_blank" rel="noreferrer">任意值</a> 等功能成为可能的原因。</p><ul><li><h6 id="如何检测类别" tabindex="-1">如何检测类别 <a class="header-anchor" href="#如何检测类别" aria-label="Permalink to &quot;如何检测类别&quot;">​</a></h6></li></ul><p>Tailwind 将你的所有源文件视为纯文本，并且不会尝试以任何方式将你的文件解析为代码。</p><p>相反，它只会根据 Tailwind 在类名中期望的字符，在文件中查找可能为类的任何标记：</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">children</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> colors</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    black: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-black text-white&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    blue: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-blue-500 text-white&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    white: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-white text-black&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colors</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} rounded-full px-2 py-1.5 font-sans text-sm/6 font-medium shadow\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {children}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>然后，它会尝试为所有这些标记生成 CSS，丢弃任何未映射到框架所知的工具类的标记。</p><ul><li><h6 id="动态类名" tabindex="-1">动态类名 <a class="header-anchor" href="#动态类名" aria-label="Permalink to &quot;动态类名&quot;">​</a></h6></li></ul><p>由于 Tailwind 将你的源文件扫描为纯文本，因此它无法理解你使用的编程语言中的字符串连接或插值。</p><p><strong>不要动态构建类名称</strong></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-{{ error ? &#39;red&#39; : &#39;green&#39; }}-600&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>在上面的示例中，字符串 <code>text-red-600</code> 和 <code>text-green-600</code> 不存在，因此 Tailwind 不会生成这些类。<br> 相反，请确保你使用的任何类名都完整存在：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{ error ? &#39;text-red-600&#39; : &#39;text-green-600&#39; }}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>不要使用 props 动态构建类名</strong></p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">children</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`bg-\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}-600 hover:bg-\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}-500 ...\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}&gt;{children}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>相反，将 props 映射到在构建时可静态检测的完整类名：</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">children</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> colorVariants</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    blue: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-blue-600 hover:bg-blue-500&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    red: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-red-600 hover:bg-red-500&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorVariants</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} ...\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}&gt;{children}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这有一个额外的好处，可以让你将不同的属性值映射到不同的颜色阴影，例如：</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">children</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> colorVariants</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    blue: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-blue-600 hover:bg-blue-500 text-white&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    red: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-red-500 hover:bg-red-400 text-white&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    yellow: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-yellow-300 hover:bg-yellow-400 text-black&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorVariants</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} ...\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}&gt;{children}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>只要你始终在代码中使用完整的类名，Tailwind 每次都会完美地生成所有 CSS。</p><ul><li><h6 id="扫描哪些文件" tabindex="-1">扫描哪些文件 <a class="header-anchor" href="#扫描哪些文件" aria-label="Permalink to &quot;扫描哪些文件&quot;">​</a></h6></li></ul><p>Tailwind 将扫描项目中的每个文件以查找类名，但以下情况除外：</p><ul><li><code>.gitignore</code> 文件中的文件</li><li>二进制文件，如图片、视频或 zip 文件</li><li>CSS 文件</li><li>通用包管理器锁定文件</li></ul><p>如果你需要扫描 Tailwind 默认忽略的任何文件，则可以 <strong>明确注册</strong> 这些源。</p><ol><li><p><strong>显式注册源</strong>：使用 <code>@source</code> 明确注册相对于样式表的源路径：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &quot;../node_modules/@acmecorp/ui-lib&quot;;</span></span></code></pre></div><p>当你需要扫描使用 Tailwind 构建的外部库时，这特别有用，因为依赖通常列在你的 <code>.gitignore</code> 文件中，并且默认情况下被 Tailwind 忽略。</p></li><li><p><strong>设置基本路径</strong>：默认情况下，Tailwind 使用当前工作目录作为扫描类名的起点。</p><p>要明确设置源检测的基本路径，请在 CSS 中导入 Tailwind 时使用 <code>source()</code> 函数：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> source(&quot;../src&quot;);</span></span></code></pre></div><p>这在使用 monorepos 时很有用，其中你的构建命令从 monorepo 的根目录而不是每个项目的根目录运行。</p></li><li><p><strong>忽略特定路径</strong>：使用 <code>@source not</code> 在扫描类名时忽略相对于样式表的特定路径：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> not &quot;../src/components/legacy&quot;;</span></span></code></pre></div><p>当你的项目中存在大型目录并且你知道它们不使用 Tailwind 类（例如旧版组件或第三方库）时，这将非常有用。</p></li><li><p><strong>禁用自动检测</strong>：如果你想明确注册所有源，请使用 <code>source(none)</code> 完全禁用自动源检测：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> source(none);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &quot;../admin&quot;;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &quot;../shared&quot;;</span></span></code></pre></div><p>这在具有多个 Tailwind 样式表的项目中很有用，你希望确保每个样式表仅包含每个样式表所需的类。</p></li></ol><ul><li><h6 id="将特定工具添加到安全列表" tabindex="-1">将特定工具添加到安全列表 <a class="header-anchor" href="#将特定工具添加到安全列表" aria-label="Permalink to &quot;将特定工具添加到安全列表&quot;">​</a></h6></li></ul><p>如果你需要确保 Tailwind 生成内容文件中不存在的某些类名，请使用 <code>@source inline()</code> 强制生成它们：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> inline(&quot;underline&quot;);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*Generated CSS*/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.underline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  text-decoration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">underline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol><li><p><strong>将变体添加到安全列表</strong>：你还可以使用 <code>@source inline()</code> 生成带有变体的类。例如，要生成带有悬停和聚焦变体的 <code>underline</code> 类，请将 <code>{hover:,focus:,}</code> 添加到源输入：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> inline(&quot;{hover:,focus:,}underline&quot;);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*Generated CSS*/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.underline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  text-decoration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">underline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .hover</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">underline:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    text-decoration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">underline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (focus: focus) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .focus</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">underline:focus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    text-decoration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">underline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><strong>将范围添加到安全列表</strong>：源输入为  <a href="https://www.gnu.org/software/bash/manual/html_node/Brace-Expansion.html" target="_blank" rel="noreferrer">brace expanded</a>，因此你可以一次生成多个类。例如，要生成所有带有悬停变体的红色背景颜色，请使用范围：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> inline(&quot;{hover:,}bg-red-{50,{100..}}&quot;);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*Generated CSS*/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.bg-red-50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-red-50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.bg-red-100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-red-100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.bg-red-200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-red-200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* ... */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.bg-red-800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-red-800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.bg-red-900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-red-900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.bg-red-950</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-red-950</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .hover</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bg-red-50:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-red-50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ... */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .hover</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bg-red-950:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-red-950</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这将生成从 100 到 900 的红色背景色，增量为 100，并且第一个和最后一个渐变色分别为 50 和 950。它还会为每个类添加 <code>hover:</code> 变体。</p></li><li><p><strong>明确排除类别</strong>：使用 <code>@source not inline()</code> 阻止生成特定类，即使在源文件中检测到它们：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> not inline(&quot;{hover:,focus:,}bg-red-{50,{100..}}&quot;);</span></span></code></pre></div><p>这将明确排除红色背景工具及其悬停和聚焦变体的生成。</p></li></ol><hr><h3 id="函数与指令" tabindex="-1">函数与指令 <a class="header-anchor" href="#函数与指令" aria-label="Permalink to &quot;函数与指令&quot;">​</a></h3><ul><li><h6 id="指令" tabindex="-1">指令 <a class="header-anchor" href="#指令" aria-label="Permalink to &quot;指令&quot;">​</a></h6></li></ul><p>指令是自定义的特定于 Tailwind 的 <a href="https://web.nodejs.cn/en-US/docs/Web/CSS/At-rule" target="_blank" rel="noreferrer">at-rules</a>，你可以在 CSS 中使用它，为 Tailwind CSS 项目提供特殊功能。</p><ol><li><p><code>@import</code></p><p>使用 <code>@import</code> 指令内联导入 CSS 文件，包括 Tailwind 本身：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div></li><li><p><code>@theme</code></p><p>使用 <code>@theme</code> 指令定义项目的自定义设计标记，如字体、颜色和断点：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --font-display: &quot;Satoshi&quot;, &quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --breakpoint-3xl: 120rem;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-avocado-100: oklch(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.99</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0 0);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-avocado-200: oklch(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.98</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.04</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 113</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-avocado-300: oklch(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.94</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 115</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-avocado-400: oklch(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.92</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.19</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 114</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.08</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-avocado-500: oklch(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.84</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 117</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.33</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --color-avocado-600: oklch(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.53</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 118</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.34</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --ease-fluid: cubic-bezier(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, 0, 0, 1);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  --ease-snappy: cubic-bezier(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, 0, 0, 1);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ... */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><code>@source</code></p><p>使用 <code>@source</code> 指令明确指定 Tailwind 自动内容检测未拾取的源文件：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &quot;../node_modules/@my-company/ui-lib&quot;;</span></span></code></pre></div></li><li><p><code>@utility</code></p><p>使用 <code>@utility</code> 指令将自定义工具添加到你的项目，这些工具可与 <code>hover</code>、<code>focus</code> 和 <code>lg</code> 等变体一起使用：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab-4 {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tab-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 4;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><code>@variant</code></p><p>使用 <code>@variant</code> 指令将 Tailwind 变体应用于 CSS 中的样式：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">white</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">variant</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">black</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><code>@custom-variant</code></p><p>使用 <code>@custom-variant</code> 指令在你的项目中添加自定义变体：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@custom-variant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> theme-midnight (&amp;:where([data-theme=&quot;midnight&quot;] *));</span></span></code></pre></div><p>这让你可以编写工具 <code>theme-midnight:bg-black</code> 和 <code>theme-midnight:text-white</code>。</p></li><li><p><code>@apply</code></p><p>使用 <code>@apply</code> 指令将任何现有工具类内联到你自己的自定义 CSS 中：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.select2-dropdown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rounded-b-lg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> shadow-md</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.select2-search</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rounded</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> border</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> border-gray-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">300;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.select2-results__group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text-lg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> font-bold</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text-gray-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">900;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>当你需要编写自定义 CSS（例如覆盖第三方库中的样式）但仍想使用设计令牌并使用你在 HTML 中习惯使用的相同语法时，这将非常有用。</p></li><li><p><code>@reference</code></p><p>如果你想在 Vue 或 Svelte 组件的 <code>&lt;style&gt;</code> 块中或在 CSS 模块中使用 <code>@apply</code> 或 <code>@variant</code>，你将需要导入主题变量、自定义工具和自定义变体以使这些值在该上下文中可用。</p><p>要做到这一点而不在输出中重复任何 CSS，请使用 <code>@reference</code> 指令导入主样式表以供参考，而无需实际包含样式：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Hello world!&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @reference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &quot;../../app.css&quot;;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> font-bold</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text-red-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">500;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>如果你只是使用默认主题而没有自定义，你可以直接导入 <code>tailwindcss</code>：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Hello world!&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @reference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &quot;tailwindcss&quot;;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> font-bold</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text-red-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">500;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li></ol><ul><li><h6 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h6></li></ul><p>Tailwind 提供以下构建时函数，使使用颜色和间距比例更加容易。</p><ol><li><p><code>--alpha()</code></p><p>使用 <code>--alpha()</code> 函数调整颜色的透明度：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*Input CSS*/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: --alpha(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-lime-300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*Compiled CSS*/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color-mix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">in</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> oklab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-lime-300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">transparent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><code>--spacing()</code></p><p>使用 <code>--spacing()</code> 函数根据你的主题生成间距值：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*Input CSS*/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: --spacing(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*Compiled CSS*/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">calc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--spacing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这在任意值中也很有用，尤其是与 <code>calc()</code> 结合使用时：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;py-[calc(--spacing(4)-1px)]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>以下指令和函数仅用于与 Tailwind CSS v3.x 兼容。</p></li><li><p><code>@config</code></p><p>使用 <code>@config</code> 指令加载基于 JavaScript 的旧配置文件：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &quot;../../tailwind.config.js&quot;;</span></span></code></pre></div><p>v4.0 不支持基于 JavaScript 的配置中的 <code>corePlugins</code>、<code>safelist</code> 和 <code>separator</code> 选项。</p></li><li><p><code>@plugin</code></p><p>使用 <code>@plugin</code> 指令加载基于 JavaScript 的旧插件：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &quot;@tailwindcss/typography&quot;;</span></span></code></pre></div><p><code>@plugin</code> 指令接受包名称或本地路径。</p></li></ol><hr><h2 id="preflight" tabindex="-1">Preflight <a class="header-anchor" href="#preflight" aria-label="Permalink to &quot;Preflight&quot;">​</a></h2><p>Preflight 建立在 <a href="https://github.com/sindresorhus/modern-normalize" target="_blank" rel="noreferrer">modern-normalize</a> 之上，是 Tailwind 项目的一组基本样式，旨在消除跨浏览器的不一致，并使你更容易在设计系统的约束下工作。</p><p>当你将 <code>tailwindcss</code> 导入项目时，Preflight 会自动注入到 <code>base</code> 层：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> theme, base, components, utilities;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss/theme.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer(theme);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss/preflight.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer(base);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss/utilities.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer(utilities);</span></span></code></pre></div><p>虽然 Preflight 中的大多数样式都旨在不引人注意 - 它们只是让事物表现得更像你期望的那样 - 但有些样式更具主观性，当你第一次遇到它们时可能会感到惊讶。</p><p><strong>边距已删除</strong>：Preflight 从所有元素（包括标题、块引用、段落等）中删除所有默认边距：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::backdrop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">file-selector-button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这使得意外依赖用户代理样式表应用的不属于间距比例的边距值变得更加困难。</p><p><strong>边框样式已重置</strong>：为了通过简单地添加 <code>border</code> 类来轻松添加边框，Tailwind 使用以下规则覆盖所有元素的默认边框样式：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::backdrop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">file-selector-button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  box-sizing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">border-box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>由于 <code>border</code> 类仅设置 <code>border-width</code> 属性，因此此重置可确保添加该类始终添加使用 <code>currentColor</code> 的实心 <code>1px</code> 边框。</p><p>在集成某些第三方库时，这可能会导致一些意外结果，例如 <a href="https://github.com/tailwindlabs/tailwindcss/issues/484" target="_blank" rel="noreferrer">谷歌地图</a>。</p><p>当你遇到这种情况时，你可以通过使用你自己的自定义 CSS 覆盖预检样式来解决这些问题：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> base {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .google-map</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>标题没有样式</strong>：默认情况下，所有标题元素均完全未设置样式，并且具有与普通文本相同的字体大小和粗细：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这样做的原因有两个：</p><ul><li>它可以帮助你避免意外偏离字体比例。默认情况下，浏览器将大小分配给 Tailwind 的默认字体比例中不存在的标题，并且不能保证在你自己的字体比例中存在。</li><li>在 UI 开发中，标题通常应该在视觉上不被强调。默认情况下使标题无样式意味着你对标题应用的任何样式都是有意识和故意发生的。<br> 你始终可以通过 <a href="https://tailwind.nodejs.cn/docs/adding-custom-styles#adding-base-styles" target="_blank" rel="noreferrer">添加自己的基本样式</a> 将默认标题样式添加到你的项目中。</li></ul><p><strong>列表没有样式</strong>：有序和无序列表默认无样式，没有项目符号或数字：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ul</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">menu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  list-style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如果你想设置列表样式，可以使用 <a href="https://tailwind.nodejs.cn/docs/list-style-type" target="_blank" rel="noreferrer">list-style-type</a> 和 <a href="https://tailwind.nodejs.cn/docs/list-style-position" target="_blank" rel="noreferrer">list-style-position</a> 工具：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ul</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list-inside</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> list-disc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">One&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Two&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Three&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ul</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>你始终可以通过 <a href="https://tailwind.nodejs.cn/docs/adding-custom-styles#adding-base-styles" target="_blank" rel="noreferrer">添加自己的基本样式</a> 将默认列表样式添加到你的项目中。<br> 注意：无样式列表是 <a href="https://unfetteredthoughts.net/2017/09/26/voiceover-and-list-style-type-none/" target="_blank" rel="noreferrer">没有被 VoiceOver 宣布为列表</a>。如果你的内容确实是一个列表，但你希望保持其无样式，请将 <a href="https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html" target="_blank" rel="noreferrer">添加 &quot;list&quot; 角色</a> 添加到该元素：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ul</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> role</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;list&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;One&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Two&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Three&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ul</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>图片是块级的</strong>：图片和其他替换元素（如 <code>svg</code>、<code>video</code>、<code>canvas</code> 等）默认为 <code>display: block</code>：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">svg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">video</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">canvas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">audio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">iframe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  vertical-align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">middle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这有助于避免使用浏览器默认值 <code>display: inline</code> 时经常遇到的意外对齐问题。</p><p>如果你需要将这些元素之一设为 <code>inline</code> 而不是 <code>block</code>，只需使用 <code>inline</code> 工具：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;inline&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;...&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><p><strong>图片受到限制</strong>：图片和视频以保留其固有方面的方式限制在父级宽度内比率：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">video</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  max-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这可以防止它们溢出容器并使它们默认响应。如果你需要覆盖此行为，请使用 <code>max-w-none</code> 工具：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;max-w-none&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;...&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><ul><li><h6 id="扩展-preflight" tabindex="-1">扩展 Preflight <a class="header-anchor" href="#扩展-preflight" aria-label="Permalink to &quot;扩展 Preflight&quot;">​</a></h6></li></ul><p>如果你希望在 Preflight 之上添加自己的基本样式，请使用 <code>@layer base</code> 将它们添加到 CSS 中的 <code>base</code> CSS 层：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> base {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--text-2xl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--text-xl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  h3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--text-lg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-blue-600</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    text-decoration-line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">underline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><h6 id="禁用-preflight" tabindex="-1">禁用 Preflight <a class="header-anchor" href="#禁用-preflight" aria-label="Permalink to &quot;禁用 Preflight&quot;">​</a></h6></li></ul><p>如果你希望完全禁用 Preflight（可能是因为你正在将 Tailwind 集成到现有项目中，或者你更愿意定义自己的基本样式），你可以通过仅导入所需的 Tailwind 部分来实现。</p><p>默认情况下，<code>@import &quot;tailwindcss&quot;;</code> 注入的内容如下：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> theme, base, components, utilities;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss/theme.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer(theme);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss/preflight.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer(base);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss/utilities.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer(utilities);</span></span></code></pre></div><p>要禁用 Preflight，只需省略其导入，同时保留其他所有内容：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> theme, base, components, utilities;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss/theme.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer(theme);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss/preflight.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer(base);  //删除</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tailwindcss/utilities.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer(utilities);</span></span></code></pre></div><hr><h2 id="布局" tabindex="-1">布局 <a class="header-anchor" href="#布局" aria-label="Permalink to &quot;布局&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类名</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/aspect-ratio" target="_blank" rel="noreferrer">aspect-ratio</a></td><td style="text-align:left;">用于控制<strong>元素纵横比</strong>的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/columns" target="_blank" rel="noreferrer">columns</a></td><td style="text-align:left;">用于控制<strong>元素内列数</strong>的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/break-after" target="_blank" rel="noreferrer">break-after</a></td><td style="text-align:left;">用于控制列或页面在元素后如何<strong>分页</strong>的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/break-before" target="_blank" rel="noreferrer">break-before</a></td><td style="text-align:left;">用于控制列或页面在元素前如何<strong>分页</strong>的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/break-inside" target="_blank" rel="noreferrer">break-inside</a></td><td style="text-align:left;">用于控制元素内列或页面如何<strong>分页</strong>的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/box-decoration-break" target="_blank" rel="noreferrer">box-decoration-break</a></td><td style="text-align:left;">用于控制元素片段在<strong>跨越多行、多列或多页</strong>时应如何呈现的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/box-sizing" target="_blank" rel="noreferrer">box-sizing</a></td><td style="text-align:left;">用于控制浏览器如何<strong>计算元素</strong>总大小的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/display" target="_blank" rel="noreferrer">display</a></td><td style="text-align:left;">用于控制元素<strong>显示框类型</strong>的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/float" target="_blank" rel="noreferrer">float</a></td><td style="text-align:left;">用于控制元素周围内容<strong>浮动</strong>的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/clear" target="_blank" rel="noreferrer">clear</a></td><td style="text-align:left;">用于<strong>清除</strong>元素周围内容<strong>浮动</strong>的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/isolation" target="_blank" rel="noreferrer">isolation</a></td><td style="text-align:left;">用于控制元素是否应显式创建新的<strong>层叠上下文</strong>的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/object-fit" target="_blank" rel="noreferrer">object-fit</a></td><td style="text-align:left;">用于控制如何<strong>调整替换元素内容大小</strong>的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/object-position" target="_blank" rel="noreferrer">object-position</a></td><td style="text-align:left;">用于控制<strong>替换元素</strong>的内容应如何在其容器内<strong>定位</strong>的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/overflow" target="_blank" rel="noreferrer">overflow</a></td><td style="text-align:left;">用于控制元素如何<strong>处理超出容器范围的内容</strong>的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/overscroll-behavior" target="_blank" rel="noreferrer">overscroll-behavior</a></td><td style="text-align:left;">用于控制浏览器在<strong>滚动区域边界时行为</strong>的工具</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/position" target="_blank" rel="noreferrer">position</a></td><td style="text-align:left;">用于控制元素在文档中的<strong>位置</strong>的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/top-right-bottom-left" target="_blank" rel="noreferrer">top / right / bottom / left</a></td><td style="text-align:left;">用于控制<strong>定位元素位置</strong>的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/visibility" target="_blank" rel="noreferrer">visibility</a></td><td style="text-align:left;">用于控制元素<strong>可见性</strong>的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/z-index" target="_blank" rel="noreferrer">z-index</a></td><td style="text-align:left;">用于控制元素<strong>堆栈顺序</strong>的工具。</td></tr></tbody></table><h2 id="flexbox-grid" tabindex="-1">Flexbox &amp; Grid <a class="header-anchor" href="#flexbox-grid" aria-label="Permalink to &quot;Flexbox &amp; Grid&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类名</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/flex-basis" target="_blank" rel="noreferrer">flex-basis</a></td><td style="text-align:left;">用于控制弹性盒子的初始大小的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/flex-direction" target="_blank" rel="noreferrer">flex-direction</a></td><td style="text-align:left;">用于控制弹性盒子方向的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/flex-wrap" target="_blank" rel="noreferrer">flex-wrap</a></td><td style="text-align:left;">用于控制弹性盒子如何换行的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/flex" target="_blank" rel="noreferrer">flex</a></td><td style="text-align:left;">用于控制弹性项如何增大和缩小的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/flex-grow" target="_blank" rel="noreferrer">flex-grow</a></td><td style="text-align:left;">用于控制弹性盒子如何增长的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/flex-shrink" target="_blank" rel="noreferrer">flex-shrink</a></td><td style="text-align:left;">用于控制弹性盒子如何收缩的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/order" target="_blank" rel="noreferrer">order</a></td><td style="text-align:left;">用于控制弹性和网格项顺序的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/grid-template-columns" target="_blank" rel="noreferrer">grid-template-columns</a></td><td style="text-align:left;">用于指定网格布局中的列的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/grid-column" target="_blank" rel="noreferrer">grid-column</a></td><td style="text-align:left;">用于控制元素如何调整大小和放置在网格列中的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/grid-template-rows" target="_blank" rel="noreferrer">grid-template-rows</a></td><td style="text-align:left;">用于指定网格布局中的行的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/grid-row" target="_blank" rel="noreferrer">grid-row</a></td><td style="text-align:left;">用于控制元素如何调整大小和放置在网格行中的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/grid-auto-flow" target="_blank" rel="noreferrer">grid-auto-flow</a></td><td style="text-align:left;">用于控制网格中元素如何自动放置的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/grid-auto-columns" target="_blank" rel="noreferrer">grid-auto-columns</a></td><td style="text-align:left;">用于控制隐式创建的网格列大小的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/grid-auto-rows" target="_blank" rel="noreferrer">grid-auto-rows</a></td><td style="text-align:left;">用于控制隐式创建的网格行大小的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/gap" target="_blank" rel="noreferrer">gap</a></td><td style="text-align:left;">用于控制网格和弹性框项目之间的装订线的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/justify-content" target="_blank" rel="noreferrer">justify-content</a></td><td style="text-align:left;">用于控制弹性盒子和网格项目沿容器主轴定位的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/justify-items" target="_blank" rel="noreferrer">justify-items</a></td><td style="text-align:left;">用于控制网格项目如何沿其内联轴对齐的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/justify-self" target="_blank" rel="noreferrer">justify-self</a></td><td style="text-align:left;">用于控制单个网格项如何沿其内联轴对齐的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/align-content" target="_blank" rel="noreferrer">align-content</a></td><td style="text-align:left;">用于控制行在多行弹性和网格容器中的位置的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/align-items" target="_blank" rel="noreferrer">align-items</a></td><td style="text-align:left;">用于控制弹性盒子和网格项目沿容器交叉轴定位的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/align-self" target="_blank" rel="noreferrer">align-self</a></td><td style="text-align:left;">用于控制单个弹性或网格项目沿其容器交叉轴定位的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/place-content" target="_blank" rel="noreferrer">place-content</a></td><td style="text-align:left;">用于控制内容如何同时对齐和对齐的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/place-items" target="_blank" rel="noreferrer">place-items</a></td><td style="text-align:left;">用于控制项目如何同时对齐和对齐的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/place-self" target="_blank" rel="noreferrer">place-self</a></td><td style="text-align:left;">用于控制单个项目同时实现主轴对齐和交叉轴对齐的工具</td></tr></tbody></table><h2 id="间距" tabindex="-1">间距 <a class="header-anchor" href="#间距" aria-label="Permalink to &quot;间距&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类名</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/padding" target="_blank" rel="noreferrer">padding</a></td><td style="text-align:left;">用于控制元素内边距的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/margin" target="_blank" rel="noreferrer">margin</a></td><td style="text-align:left;">用于控制元素外边距的工具。</td></tr></tbody></table><h2 id="尺寸" tabindex="-1">尺寸 <a class="header-anchor" href="#尺寸" aria-label="Permalink to &quot;尺寸&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类名</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/width" target="_blank" rel="noreferrer">width</a></td><td style="text-align:left;">用于设置元素宽度的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/min-width" target="_blank" rel="noreferrer">min-width</a></td><td style="text-align:left;">用于设置元素最小宽度的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/max-width" target="_blank" rel="noreferrer">max-width</a></td><td style="text-align:left;">用于设置元素最大宽度的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/height" target="_blank" rel="noreferrer">height</a></td><td style="text-align:left;">用于设置元素高度的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/min-height" target="_blank" rel="noreferrer">min-height</a></td><td style="text-align:left;">用于设置元素最小高度的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/max-height" target="_blank" rel="noreferrer">max-height</a></td><td style="text-align:left;">用于设置元素最大高度的工具。</td></tr></tbody></table><h2 id="排版" tabindex="-1">排版 <a class="header-anchor" href="#排版" aria-label="Permalink to &quot;排版&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类名</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/font-family" target="_blank" rel="noreferrer">font-family</a></td><td style="text-align:left;">用于控制元素字体系列的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/font-size" target="_blank" rel="noreferrer">font-size</a></td><td style="text-align:left;">用于控制元素字体大小的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/font-smoothing" target="_blank" rel="noreferrer">font-smoothing</a></td><td style="text-align:left;">用于控制元素字体平滑度的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/font-style" target="_blank" rel="noreferrer">font-style</a></td><td style="text-align:left;">用于控制文本样式的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/font-weight" target="_blank" rel="noreferrer">font-weight</a></td><td style="text-align:left;">用于控制元素字体粗细的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/font-stretch" target="_blank" rel="noreferrer">font-stretch</a></td><td style="text-align:left;">用于选择字体宽度的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/font-variant-numeric" target="_blank" rel="noreferrer">font-variant-numeric</a></td><td style="text-align:left;">用于控制数字变体的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/letter-spacing" target="_blank" rel="noreferrer">letter-spacing</a></td><td style="text-align:left;">用于控制元素的跟踪或字母间距的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/line-clamp" target="_blank" rel="noreferrer">line-clamp</a></td><td style="text-align:left;">用于将文本限制为特定行数的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/line-height" target="_blank" rel="noreferrer">line-height</a></td><td style="text-align:left;">用于控制元素行距或行高的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/list-style-image" target="_blank" rel="noreferrer">list-style-image</a></td><td style="text-align:left;">用于控制列表项标记图片的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/list-style-position" target="_blank" rel="noreferrer">list-style-position</a></td><td style="text-align:left;">用于控制列表中项目符号和数字位置的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/list-style-type" target="_blank" rel="noreferrer">list-style-type</a></td><td style="text-align:left;">用于控制列表标记样式的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/text-align" target="_blank" rel="noreferrer">text-align</a></td><td style="text-align:left;">用于控制文本对齐方式的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/color" target="_blank" rel="noreferrer">color</a></td><td style="text-align:left;">用于控制元素文本颜色的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/text-decoration-line" target="_blank" rel="noreferrer">text-decoration-line</a></td><td style="text-align:left;">用于控制文本装饰的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/text-decoration-color" target="_blank" rel="noreferrer">text-decoration-color</a></td><td style="text-align:left;">用于控制文本装饰颜色的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/text-decoration-style" target="_blank" rel="noreferrer">text-decoration-style</a></td><td style="text-align:left;">用于控制文本装饰样式的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/text-decoration-thickness" target="_blank" rel="noreferrer">text-decoration-thickness</a></td><td style="text-align:left;">用于控制文本装饰厚度的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/text-underline-offset" target="_blank" rel="noreferrer">text-underline-offset</a></td><td style="text-align:left;">用于控制文本下划线偏移量的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/text-transform" target="_blank" rel="noreferrer">text-transform</a></td><td style="text-align:left;">用于控制文本大写的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/text-overflow" target="_blank" rel="noreferrer">text-overflow</a></td><td style="text-align:left;">用于控制元素文本如何溢出的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/text-wrap" target="_blank" rel="noreferrer">text-wrap</a></td><td style="text-align:left;">用于控制文本如何在元素内换行的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/text-indent" target="_blank" rel="noreferrer">text-indent</a></td><td style="text-align:left;">用于控制块中文本前显示的空白空间量的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/vertical-align" target="_blank" rel="noreferrer">vertical-align</a></td><td style="text-align:left;">用于控制内联或表格单元格框的垂直对齐的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/white-space" target="_blank" rel="noreferrer">white-space</a></td><td style="text-align:left;">用于控制元素空白属性的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/word-break" target="_blank" rel="noreferrer">word-break</a></td><td style="text-align:left;">用于控制元素中的单词中断的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/overflow-wrap" target="_blank" rel="noreferrer">overflow-wrap</a></td><td style="text-align:left;">用于控制溢出元素中单词内换行的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/hyphens" target="_blank" rel="noreferrer">hyphens</a></td><td style="text-align:left;">用于控制单词如何连字符的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/content" target="_blank" rel="noreferrer">content</a></td><td style="text-align:left;">用于控制前后伪元素内容的工具。</td></tr></tbody></table><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类名</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/background-attachment" target="_blank" rel="noreferrer">background-attachment</a></td><td style="text-align:left;">用于控制滚动时背景图片的行为方式的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/background-clip" target="_blank" rel="noreferrer">background-clip</a></td><td style="text-align:left;">用于控制元素背景边界框的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/background-color" target="_blank" rel="noreferrer">background-color</a></td><td style="text-align:left;">用于控制元素背景颜色的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/background-image" target="_blank" rel="noreferrer">background-image</a></td><td style="text-align:left;">用于控制元素背景图片的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/background-origin" target="_blank" rel="noreferrer">background-origin</a></td><td style="text-align:left;">用于控制元素背景相对于边框、内边距和内容定位的工具</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/background-position" target="_blank" rel="noreferrer">background-position</a></td><td style="text-align:left;">用于控制元素背景图片位置的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/background-repeat" target="_blank" rel="noreferrer">background-repeat</a></td><td style="text-align:left;">用于控制元素背景图片重复的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/background-size" target="_blank" rel="noreferrer">background-size</a></td><td style="text-align:left;">用于控制元素背景图片的背景大小的工具。</td></tr></tbody></table><h2 id="边框" tabindex="-1">边框 <a class="header-anchor" href="#边框" aria-label="Permalink to &quot;边框&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类名</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/border-radius" target="_blank" rel="noreferrer">border-radius</a></td><td style="text-align:left;">用于控制元素边框半径的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/border-width" target="_blank" rel="noreferrer">border-width</a></td><td style="text-align:left;">用于控制元素边框宽度的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/border-color" target="_blank" rel="noreferrer">border-color</a></td><td style="text-align:left;">用于控制元素边框颜色的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/border-style" target="_blank" rel="noreferrer">border-style</a></td><td style="text-align:left;">用于控制元素边框样式的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/outline-width" target="_blank" rel="noreferrer">outline-width</a></td><td style="text-align:left;">用于控制元素轮廓宽度的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/outline-color" target="_blank" rel="noreferrer">outline-color</a></td><td style="text-align:left;">用于控制元素轮廓颜色的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/outline-style" target="_blank" rel="noreferrer">outline-style</a></td><td style="text-align:left;">用于控制元素轮廓样式的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/outline-offset" target="_blank" rel="noreferrer">outline-offset</a></td><td style="text-align:left;">用于控制元素轮廓偏移量的工具。</td></tr></tbody></table><h2 id="效果" tabindex="-1">效果 <a class="header-anchor" href="#效果" aria-label="Permalink to &quot;效果&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类名</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/box-shadow" target="_blank" rel="noreferrer">box-shadow</a></td><td style="text-align:left;">用于控制元素框阴影的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/text-shadow" target="_blank" rel="noreferrer">text-shadow</a></td><td style="text-align:left;">用于控制文本元素阴影的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/opacity" target="_blank" rel="noreferrer">opacity</a></td><td style="text-align:left;">用于控制元素透明度的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/mix-blend-mode" target="_blank" rel="noreferrer">mix-blend-mode</a></td><td style="text-align:left;">用于控制元素如何与背景融合的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/background-blend-mode" target="_blank" rel="noreferrer">background-blend-mode</a></td><td style="text-align:left;">用于控制元素的背景图片如何与其背景颜色混合的工具</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/mask-clip" target="_blank" rel="noreferrer">mask-clip</a></td><td style="text-align:left;">用于控制元素蒙版边界框的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/mask-composite" target="_blank" rel="noreferrer">mask-composite</a></td><td style="text-align:left;">用于控制如何组合多个蒙版的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/mask-image" target="_blank" rel="noreferrer">mask-image</a></td><td style="text-align:left;">用于控制元素蒙版图片的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/mask-mode" target="_blank" rel="noreferrer">mask-mode</a></td><td style="text-align:left;">用于控制元素蒙版模式的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/mask-origin" target="_blank" rel="noreferrer">mask-origin</a></td><td style="text-align:left;">用于控制元素遮罩图像相对于边框、内边距和内容定位的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/mask-position" target="_blank" rel="noreferrer">mask-position</a></td><td style="text-align:left;">用于控制元素蒙版图片位置的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/mask-repeat" target="_blank" rel="noreferrer">mask-repeat</a></td><td style="text-align:left;">用于控制元素蒙版图片重复的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/mask-size" target="_blank" rel="noreferrer">mask-size</a></td><td style="text-align:left;">用于控制元素蒙版图片大小的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/mask-type" target="_blank" rel="noreferrer">mask-type</a></td><td style="text-align:left;">用于控制如何解释 SVG 蒙版的工具。</td></tr></tbody></table><h2 id="过滤器" tabindex="-1">过滤器 <a class="header-anchor" href="#过滤器" aria-label="Permalink to &quot;过滤器&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类名</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/filter" target="_blank" rel="noreferrer">filter</a></td><td style="text-align:left;">用于将滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/filter-blur" target="_blank" rel="noreferrer">blur</a></td><td style="text-align:left;">用于将模糊滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/filter-brightness" target="_blank" rel="noreferrer">brightness</a></td><td style="text-align:left;">用于将亮度滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/filter-contrast" target="_blank" rel="noreferrer">contrast</a></td><td style="text-align:left;">用于将对比度滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/filter-drop-shadow" target="_blank" rel="noreferrer">drop-shadow</a></td><td style="text-align:left;">用于将阴影滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/filter-grayscale" target="_blank" rel="noreferrer">grayscale</a></td><td style="text-align:left;">用于将灰度滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/filter-hue-rotate" target="_blank" rel="noreferrer">hue-rotate</a></td><td style="text-align:left;">用于将色相旋转滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/filter-invert" target="_blank" rel="noreferrer">invert</a></td><td style="text-align:left;">用于将反转滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/filter-saturate" target="_blank" rel="noreferrer">saturate</a></td><td style="text-align:left;">用于将饱和度滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/filter-sepia" target="_blank" rel="noreferrer">sepia</a></td><td style="text-align:left;">用于将棕褐色滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/backdrop-filter" target="_blank" rel="noreferrer">backdrop-filter</a></td><td style="text-align:left;">用于将背景滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/backdrop-filter-blur" target="_blank" rel="noreferrer">blur</a></td><td style="text-align:left;">用于将背景模糊滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/backdrop-filter-brightness" target="_blank" rel="noreferrer">brightness</a></td><td style="text-align:left;">用于将背景亮度滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/backdrop-filter-contrast" target="_blank" rel="noreferrer">contrast</a></td><td style="text-align:left;">用于将背景对比度滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/backdrop-filter-grayscale" target="_blank" rel="noreferrer">grayscale</a></td><td style="text-align:left;">用于将背景灰度滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/backdrop-filter-hue-rotate" target="_blank" rel="noreferrer">hue-rotate</a></td><td style="text-align:left;">用于将背景色相旋转滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/backdrop-filter-invert" target="_blank" rel="noreferrer">invert</a></td><td style="text-align:left;">用于将背景反转滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/backdrop-filter-opacity" target="_blank" rel="noreferrer">opacity</a></td><td style="text-align:left;">用于将背景透明度滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/backdrop-filter-saturate" target="_blank" rel="noreferrer">saturate</a></td><td style="text-align:left;">用于将背景饱和度滤镜应用于元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/backdrop-filter-sepia" target="_blank" rel="noreferrer">sepia</a></td><td style="text-align:left;">用于将背景棕褐色滤镜应用于元素的工具。</td></tr></tbody></table><h2 id="表格" tabindex="-1">表格 <a class="header-anchor" href="#表格" aria-label="Permalink to &quot;表格&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类名</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/border-collapse" target="_blank" rel="noreferrer">border-collapse</a></td><td style="text-align:left;">用于控制表格边框是否折叠或分离的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/border-spacing" target="_blank" rel="noreferrer">border-spacing</a></td><td style="text-align:left;">用于控制表格边框之间间距的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/table-layout" target="_blank" rel="noreferrer">table-layout</a></td><td style="text-align:left;">用于控制表格布局算法的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/caption-side" target="_blank" rel="noreferrer">caption-side</a></td><td style="text-align:left;">用于控制表格内标题元素的对齐方式的工具。</td></tr></tbody></table><h2 id="过渡与动画" tabindex="-1">过渡与动画 <a class="header-anchor" href="#过渡与动画" aria-label="Permalink to &quot;过渡与动画&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类名</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/transition-property" target="_blank" rel="noreferrer">transition-property</a></td><td style="text-align:left;">用于控制哪些 CSS 属性过渡的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/transition-behavior" target="_blank" rel="noreferrer">transition-behavior</a></td><td style="text-align:left;">用于控制 CSS 过渡行为的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/transition-duration" target="_blank" rel="noreferrer">transition-duration</a></td><td style="text-align:left;">用于控制 CSS 过渡持续时间的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/transition-timing-function" target="_blank" rel="noreferrer">transition-timing-function</a></td><td style="text-align:left;">用于控制 CSS 过渡缓和的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/transition-delay" target="_blank" rel="noreferrer">transition-delay</a></td><td style="text-align:left;">用于控制 CSS 过渡延迟的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/animation" target="_blank" rel="noreferrer">animation</a></td><td style="text-align:left;">使用 CSS 动画为元素设置动画的工具。</td></tr></tbody></table><h2 id="变换" tabindex="-1">变换 <a class="header-anchor" href="#变换" aria-label="Permalink to &quot;变换&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类名</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/backface-visibility" target="_blank" rel="noreferrer">backface-visibility</a></td><td style="text-align:left;">用于控制元素背面是否可见的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/perspective" target="_blank" rel="noreferrer">perspective</a></td><td style="text-align:left;">用于控制放置在 3D 空间中的元素透视的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/perspective-origin" target="_blank" rel="noreferrer">perspective-origin</a></td><td style="text-align:left;">用于控制元素放置在 3D 空间中的透视原点的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/rotate" target="_blank" rel="noreferrer">rotate</a></td><td style="text-align:left;">用于旋转元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/scale" target="_blank" rel="noreferrer">scale</a></td><td style="text-align:left;">用于缩放元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/skew" target="_blank" rel="noreferrer">skew</a></td><td style="text-align:left;">用于使用变换倾斜元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/transform" target="_blank" rel="noreferrer">transform</a></td><td style="text-align:left;">用于变换元素的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/transform-origin" target="_blank" rel="noreferrer">transform-origin</a></td><td style="text-align:left;">用于指定元素变换原点的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/transform-style" target="_blank" rel="noreferrer">transform-style</a></td><td style="text-align:left;">用于控制元素子元素是否放置在 3D 空间中的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/translate" target="_blank" rel="noreferrer">translate</a></td><td style="text-align:left;">用于平移元素的工具。</td></tr></tbody></table><h2 id="互动性" tabindex="-1">互动性 <a class="header-anchor" href="#互动性" aria-label="Permalink to &quot;互动性&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类名</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/accent-color" target="_blank" rel="noreferrer">accent-color</a></td><td style="text-align:left;">用于控制表单控件的强调色的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/appearance" target="_blank" rel="noreferrer">appearance</a></td><td style="text-align:left;">用于抑制原生表单控制样式的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/caret-color" target="_blank" rel="noreferrer">caret-color</a></td><td style="text-align:left;">用于控制文本输入光标颜色的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/color-scheme" target="_blank" rel="noreferrer">color-scheme</a></td><td style="text-align:left;">用于控制元素配色方案的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/cursor" target="_blank" rel="noreferrer">cursor</a></td><td style="text-align:left;">用于控制鼠标悬停在元素上时的光标样式的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/field-sizing" target="_blank" rel="noreferrer">field-sizing</a></td><td style="text-align:left;">用于控制表单控件大小的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/pointer-events" target="_blank" rel="noreferrer">pointer-events</a></td><td style="text-align:left;">用于控制元素是否响应指针事件的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/resize" target="_blank" rel="noreferrer">resize</a></td><td style="text-align:left;">用于控制如何调整元素大小的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/scroll-behavior" target="_blank" rel="noreferrer">scroll-behavior</a></td><td style="text-align:left;">用于控制元素滚动行为的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/scroll-margin" target="_blank" rel="noreferrer">scroll-margin</a></td><td style="text-align:left;">用于控制捕捉容器中项目周围的滚动偏移量的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/scroll-padding" target="_blank" rel="noreferrer">scroll-padding</a></td><td style="text-align:left;">用于控制元素在捕捉容器内的滚动偏移的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/scroll-snap-align" target="_blank" rel="noreferrer">scroll-snap-align</a></td><td style="text-align:left;">用于控制元素滚动捕捉对齐的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/scroll-snap-stop" target="_blank" rel="noreferrer">scroll-snap-stop</a></td><td style="text-align:left;">用于控制是否可以跳过可能的捕捉位置的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/scroll-snap-type" target="_blank" rel="noreferrer">scroll-snap-type</a></td><td style="text-align:left;">用于控制在捕捉容器中如何严格执行捕捉点的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/touch-action" target="_blank" rel="noreferrer">touch-action</a></td><td style="text-align:left;">用于控制元素如何在触摸屏上滚动和缩放的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/user-select" target="_blank" rel="noreferrer">user-select</a></td><td style="text-align:left;">用于控制用户是否可以选择元素中的文本的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/will-change" target="_blank" rel="noreferrer">will-change</a></td><td style="text-align:left;">用于优化即将发生更改的元素的动画的工具。</td></tr></tbody></table><h2 id="svg" tabindex="-1">SVG <a class="header-anchor" href="#svg" aria-label="Permalink to &quot;SVG&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类名</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/fill" target="_blank" rel="noreferrer">fill</a></td><td style="text-align:left;">用于设置 SVG 元素填充样式的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/stroke" target="_blank" rel="noreferrer">stroke</a></td><td style="text-align:left;">用于设置 SVG 元素描边样式的工具。</td></tr><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/stroke-width" target="_blank" rel="noreferrer">stroke-width</a></td><td style="text-align:left;">用于设置 SVG 元素描边宽度样式的工具。</td></tr></tbody></table><h2 id="可访问性" tabindex="-1">可访问性 <a class="header-anchor" href="#可访问性" aria-label="Permalink to &quot;可访问性&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类名</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://tailwind.nodejs.cn/docs/forced-color-adjust" target="_blank" rel="noreferrer">forced-color-adjust</a></td><td style="text-align:left;">用于选择强制颜色的工具。</td></tr></tbody></table>`,373)]))}const c=i(e,[["render",h]]);export{o as __pageData,c as default};
