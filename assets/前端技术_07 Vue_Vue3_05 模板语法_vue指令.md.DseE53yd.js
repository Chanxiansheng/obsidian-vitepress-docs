import{_ as i,c as s,o as a,ae as l}from"./chunks/framework.CIivgcbp.js";const k=JSON.parse('{"title":"模板语法&vue指令","description":"","frontmatter":{},"headers":[],"relativePath":"前端技术/07 Vue/Vue3/05 模板语法&vue指令.md","filePath":"前端技术/07 Vue/Vue3/05 模板语法&vue指令.md"}'),t={name:"前端技术/07 Vue/Vue3/05 模板语法&vue指令.md"};function p(n,e,o,d,h,c){return a(),s("div",null,e[0]||(e[0]=[l(`<h1 id="模板语法-vue指令" tabindex="-1">模板语法&amp;vue指令 <a class="header-anchor" href="#模板语法-vue指令" aria-label="Permalink to &quot;模板语法&amp;vue指令&quot;">​</a></h1><h2 id="模板插值语法" tabindex="-1">模板插值语法 <a class="header-anchor" href="#模板插值语法" aria-label="Permalink to &quot;模板插值语法&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ message }}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">template</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>支持运算符、三元表达式和操作API</p><h2 id="vue指令" tabindex="-1">vue指令 <a class="header-anchor" href="#vue指令" aria-label="Permalink to &quot;vue指令&quot;">​</a></h2><p>v- 开头都是vue 的指令。</p><ul><li><p><code>v-text</code> 用来显示文本</p></li><li><p><code>v-html</code> 用来展示富文本</p></li><li><p><code>v-if</code> 用来控制元素的显示隐藏（切换真假DOM）</p></li><li><p><code>v-else-if</code> 表示 v-if 的“else if 块”。可以链式调用</p></li><li><p><code>v-else</code> v-if条件收尾语句</p></li><li><p><code>v-show</code> 用来控制元素的显示隐藏（display none block Css切换）</p></li><li><p><code>v-on </code>简写@ 用来给元素添加事件</p><ul><li><code>v-on</code>修饰符</li></ul></li><li><p><code>v-bind</code> 简写$ : $ 用来绑定元素的属性Attr</p></li><li><p><code>v-model</code> 双向绑定</p></li><li><p><code>v-for</code> 用来遍历元素</p></li><li><p><code>v-once</code> 性能优化只渲染一次</p></li><li><p><code>v-memo</code> 性能优化会有缓存<br> 解析见：<a href="https://juejin.cn/post/7180973915580137527" title="Vue3.2 新增 v-memo - 掘金 (juejin.cn)" target="_blank" rel="noreferrer">Vue3.2 新增 v-memo - 掘金 (juejin.cn)</a></p></li></ul>`,7)]))}const u=i(t,[["render",p]]);export{k as __pageData,u as default};
