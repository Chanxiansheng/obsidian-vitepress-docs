import{_ as e,c as a,o as l,ag as t}from"./chunks/framework.-ewJmwvT.js";const r="/obsidian-vitepress-docs/assets/image_rZ8vUi5rMD.Clyyk7Jc.png",b=JSON.parse('{"title":"Vue3 移动端开发（ionic）","description":"","frontmatter":{},"headers":[],"relativePath":"前端技术/07 Vue/Vue3/35 Vue3移动端开发（ionic）.md","filePath":"前端技术/07 Vue/Vue3/35 Vue3移动端开发（ionic）.md"}'),o={name:"前端技术/07 Vue/Vue3/35 Vue3移动端开发（ionic）.md"};function n(p,i,s,c,d,u){return l(),a("div",null,i[0]||(i[0]=[t('<h1 id="vue3-移动端开发-ionic" tabindex="-1">Vue3 移动端开发（ionic） <a class="header-anchor" href="#vue3-移动端开发-ionic" aria-label="Permalink to &quot;Vue3 移动端开发（ionic）&quot;">​</a></h1><h2 id="跨端开发与原生开发" tabindex="-1">跨端开发与原生开发 <a class="header-anchor" href="#跨端开发与原生开发" aria-label="Permalink to &quot;跨端开发与原生开发&quot;">​</a></h2><ul><li><p>原生开发<br> 在了解跨端技术之前我们要先了解一下什么是原生开发。<br> 原生应用程序是指某一个移动平台（比如 iOS 或安卓）所特有的应用，使用相应平台支持的开发工具和语言，并直接调用系统提供的 SDK API。比如 Android 原生应用就是指使用 Java 或 Kotlin 语言直接调用 Android SDK 开发的应用程序；而 iOS 原生应用就是指通过 Objective-C 或 Swift 语言直接调用 iOS SDK 开发的应用程序。</p><p>原生开发有以下主要优势：</p><ul><li>可访问平台全部功能（GPS、摄像头）；</li><li>速度快、性能高、可以实现复杂动画及绘制，整体用户体验好；<br> 主要缺点：</li><li>平台特定，开发成本高；不同平台必须维护不同代码，人力成本随之变大；</li><li>内容固定，动态化弱，大多数情况下，有新功能更新时只能发版；</li></ul></li><li><p>跨端技术简介<br> 针对原生开发面临的问题，业界一直都在努力寻找好的解决方案，而时至今日，已经有很多跨端框架根据其原理，主要分为四类：</p><ul><li>H5+ 原生 (Cordova、Ionic)</li><li>JavaScript 开发 + 原生渲染 (React Native、Weex)</li><li>自绘 UI + 原生 (Qt for mobile、Flutter)</li><li>另类跨端 (taro、uni-app、remax)</li></ul></li><li><p>Hybrid 技术简介</p><ul><li><p>H5 + 原生 即 Hybrid<br> Hybird 即我们所说的混合开发，其原理就是频繁动态更新的内容是通过 H5 开发，然后借助客户端的原生网页加载控件 WebView(Android) 或 WKWebView(IOS)(后统称 WebView)。这种解决方案 H5 可以随时修改发版，不受 APP 发布审核限制；同时 H5 开发一次可以在三个平台运行，可以同时在 Android、IOS、浏览器中运行，可以降低开发成本。H5 开发所占比例越大开发成本越小，如果一个 APP 功能大部分是 H5 开发的那我们可以称之为 Web App。</p></li><li><p>混合开发的实现<br> H5 在 App 中运行拥有各种 Native 的能力，但是我们通过上面了解到 H5 是运行在 App 的 WebView 中的，本质上还是运行在一个隔离沙箱中。所以拥有调用 Native 的能力就不得不提到 WebView JavaScript Bridge，也就是我们常提到的 JSBridge，这也是混合开发的核心。一般会是 Native 在原生代码中开发一些调用原生功能的 API，然后将 API 暴露给 WebVIew 供 JavaScript 调用。因此 Native 和 JavaScript 之间就需要一个通信的桥梁，就是 JSBridge。它主要负责 JavaScript 和 Native 的消息传递和提供一个标准的协议和消息格式。</p><p><img src="'+r+`" alt=""></p><p>混合应用的优点是：动态内容可以用 H5 开发，而 H5 是 Web 技术栈，Web 技术栈生态开放且社区资源丰富，整体开发效率高。缺点是性能体验不佳，对于复杂用户界面或动画，WebView 有时会不堪重任。</p></li></ul></li></ul><h2 id="跨端开发工具" tabindex="-1">跨端开发工具 <a class="header-anchor" href="#跨端开发工具" aria-label="Permalink to &quot;跨端开发工具&quot;">​</a></h2><ol><li><p><strong>uniapp</strong><br><a href="https://uniapp.dcloud.net.cn/" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/</a></p><ul><li>能支持十多个平台，但可能会存在性能损失较大和字体乱码等问题，更适合开发小程序之类的。</li></ul></li><li><p><strong>react</strong><br><a href="https://www.reactnative.cn/" target="_blank" rel="noreferrer">https://www.reactnative.cn/</a></p><ul><li>拥有 react native ，能直接开发原生应用，但 Vue 无法使用。</li></ul></li><li><p><strong>Cordova</strong><br><a href="https://cordova.apache.org/" target="_blank" rel="noreferrer">https://cordova.apache.org/</a></p><ul><li>支持原生 html js css 打包成 ios android exe dmg。</li><li>比较使用现成项目转移动端。</li></ul></li><li><p><strong>ionic</strong><br><a href="https://ionicframework.com/docs" target="_blank" rel="noreferrer">https://ionicframework.com/docs</a></p><ul><li>框架支持 Vue3、angular、react、ts 构建 Android iOS 桌面程序，Vue 官网推荐使用。</li><li>webView 渲染，属于 Hybrid</li></ul></li><li><p><strong>weex</strong><br><a href="https://weexapp.com/zh/guide/introduction.html" target="_blank" rel="noreferrer">https://weexapp.com/zh/guide/introduction.html</a></p><ul><li>vue2 开发原生应用，最后维护时间 2019 年，可能存在问题。</li></ul></li><li><p><strong>flutter</strong><br><a href="https://docs.flutter.dev/get-started/install/windows" target="_blank" rel="noreferrer">https://docs.flutter.dev/get-started/install/windows</a></p><ul><li>可以开发跨平台应用，需要学习<strong>Dart</strong>语言，性能好。</li></ul></li></ol><h2 id="ionic" tabindex="-1"><strong>ionic</strong> <a class="header-anchor" href="#ionic" aria-label="Permalink to &quot;**ionic**&quot;">​</a></h2><ul><li><p>前置条件<br> 安装 java 环境 和 安卓编辑器 sdk</p><ul><li><p>java JKD 下载<br><a href="https://www.oracle.com/java/technologies/downloads/?spm=wolai.workspace.0.0.75a77495pVdly1" target="_blank" rel="noreferrer">https://www.oracle.com/java/technologies/downloads/?spm=wolai.workspace.0.0.75a77495pVdly1</a></p></li><li><p>安卓编辑器下载<br><a href="https://developer.android.google.cn/studio/" target="_blank" rel="noreferrer">https://developer.android.google.cn/studio/</a><br> 安装完成检查环境变量</p><ul><li><code>JAVA_HOME</code></li><li>path 下 <code>%JAVA_HOME%\\bin</code></li><li><code>ANDROID_HOME</code></li></ul></li></ul><p>检查是否有安卓编辑器的 sdk，如没安装需要安装</p></li><li><p>安装 ionic<br><code>npm install -g @ionic/cli</code><br> 安装完成后会有 ionic 命令</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ionic start [name] [template] [options]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#            名称      模板    类型为vue项目</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ionic start app tabs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vue</span></span></code></pre></div></li><li><p>安装依赖<br><code>npm install </code></p></li><li><p>启动测试<br><code>npm run dev</code></p></li><li><p>运行至 android 编辑器 调试</p><ol><li><code>npm run build</code> 打包</li><li><code>ionic capacitor copy android</code> 生产安卓项目</li><li><code>ionic capacitor open android</code> 打开安卓项目</li></ol></li><li><p>点击上面绿色箭头运行</p></li><li><p>热更新 （如果要热更新预览 App 需要一个安卓设备）</p></li></ul>`,7)]))}const g=e(o,[["render",n]]);export{b as __pageData,g as default};
