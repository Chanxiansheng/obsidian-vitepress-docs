import{_ as t,c as a,o as s,ag as r}from"./chunks/framework.-ewJmwvT.js";const i="/obsidian-vitepress-docs/assets/%E6%9C%AA%E5%91%BD%E5%90%8D-1.KIPRZQ6M.png",m=JSON.parse('{"title":"01- 简介","description":"","frontmatter":{},"headers":[],"relativePath":"服务端/服务端应用框架/NEST/纸飞机视频笔记/01-简介.md","filePath":"服务端/服务端应用框架/NEST/纸飞机视频笔记/01-简介.md"}'),o={name:"服务端/服务端应用框架/NEST/纸飞机视频笔记/01-简介.md"};function p(c,e,_,l,n,d){return s(),a("div",null,e[0]||(e[0]=[r('<h1 id="_01-简介" tabindex="-1">01- 简介 <a class="header-anchor" href="#_01-简介" aria-label="Permalink to &quot;01- 简介&quot;">​</a></h1><div class="note custom-block github-alert"><p class="custom-block-title">学习视频来源：</p><p><a href="https://www.bilibili.com/video/BV14fDGYUEip/?spm_id_from=333.337.search-card.all.click&amp;vd_source=090e83bb222c29671e06b8517288701c" target="_blank" rel="noreferrer">Node.js框架之Nest JS基础学习_哔哩哔哩_bilibili</a></p></div><p>技术栈</p><p><img src="'+i+'" alt="D-学习笔记/服务端/08 服务端应用框架/NEST/纸飞机视频笔记/attachments 1/未命名-1.png"></p><p>NestJS 是一个用于构建高效、可扩展的 Node.js 服务器端应用的框架。 它使用渐进式 JavaScript，构建并完全支持 TypeScript（但仍然允许开发者使用纯 JavaScript 进行编码）并结合了 OOP（面向对象编程）、FP（函数式编程）和 FRP（函数式反应式编程）的元素。</p><p>在幕后，Nest 使用强大的 HTTP 服务器框架，如 <a href="https://express.nodejs.cn/" title="Express" target="_blank" rel="noreferrer">Express</a>（默认），也可以选择配置为使用 <a href="https://fastify.nodejs.cn/" title="Fastify" target="_blank" rel="noreferrer">Fastify</a>！</p><p>Nest 在这些常见的 Node.js 框架（Express/Fastify）之上提供了一个抽象级别，但也直接向开发者公开了它们的 API。 这使开发者可以自由使用可用于底层平台的无数第三方模块。</p>',7)]))}const b=t(o,[["render",p]]);export{m as __pageData,b as default};
