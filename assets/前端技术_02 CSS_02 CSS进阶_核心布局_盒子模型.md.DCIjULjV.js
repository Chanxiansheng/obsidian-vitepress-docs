import{_ as i,c as a,o as e,ae as n}from"./chunks/framework.CIivgcbp.js";const t="/obsidian-vitepress-docs/assets/Pasted%20image%2020231013122200.BBMPLEJ2.png",l="/obsidian-vitepress-docs/assets/Pasted%20image%2020231013123350.Bexn9mgu.png",b=JSON.parse('{"title":"盒子模型","description":"","frontmatter":{},"headers":[],"relativePath":"前端技术/02 CSS/02 CSS进阶/核心布局/盒子模型.md","filePath":"前端技术/02 CSS/02 CSS进阶/核心布局/盒子模型.md"}'),p={name:"前端技术/02 CSS/02 CSS进阶/核心布局/盒子模型.md"};function h(d,s,o,r,c,g){return e(),a("div",null,s[0]||(s[0]=[n('<h1 id="盒子模型" tabindex="-1">盒子模型 <a class="header-anchor" href="#盒子模型" aria-label="Permalink to &quot;盒子模型&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>所有 HTML 元素都可以视为方框。在 CSS 中，在谈论设计和布局时，称为“盒子模型”（box model）。</p><p>CSS 框模型实质上是一个包围每个 HTML 元素的框。它包括：外边距、边框、内边距以及实际的内容。下图展示了盒模型：<img src="'+t+'" alt="Pasted image 20231013122200.png"></p><ul><li><em>内容</em> <strong>Content</strong>:框的内容，其中显示文本和图像。</li><li><em>内边距</em> <code>padding</code> :清除内容周围的区域。内边距是透明的。</li><li><em>边框</em> <code>border</code>:围绕内边距和内容的边框。</li><li><em>外边距</em> <code>margin</code>:清除边界外的区域。外边距是透明的。</li></ul><h2 id="盒子模型的宽和高" tabindex="-1">盒子模型的宽和高 <a class="header-anchor" href="#盒子模型的宽和高" aria-label="Permalink to &quot;盒子模型的宽和高&quot;">​</a></h2><p>在 CSS 中，width 和 height 指的是内容区域的宽度和高度。增加内边距、边框和外边距不会影响内容区域的尺寸，但是会增加元素框的总尺寸。</p><p><img src="'+l+`" alt="Pasted image 20231013123350.png"></p><ul><li>==元素实际宽 = width + 边框高 + 左右内边距==</li><li>==元素实际高 = height + 边框高 + 上下内边距==</li></ul><p>提示：<strong>外边距可以是负值</strong>，负 Margin 是一种在 CSS 布局中非常有用的技巧，可以用于微调元素的位置、调整元素的层叠顺序、消除元素之间的空隙等。<br> 负边距 + 定位：水平垂直居中（类似 transform）<br> 负边框 + 浮动：边框重叠</p><h2 id="清除默认内外边距" tabindex="-1">清除默认内外边距 <a class="header-anchor" href="#清除默认内外边距" aria-label="Permalink to &quot;清除默认内外边距&quot;">​</a></h2><p>内边距、边框和外边距都是可选的，默认值是零。但是，许多元素将由用户代理样式表设置外边距和内边距。可以通过将元素的 margin 和 padding 设置为零来覆盖这些浏览器样式。这可以分别进行，也可以使用通用选择器对所有元素进行设置：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="box-sizing-属性" tabindex="-1">box-sizing 属性 <a class="header-anchor" href="#box-sizing-属性" aria-label="Permalink to &quot;box-sizing 属性&quot;">​</a></h2><p>CSS3 <code>box-sizing</code> 属性在一个元素的 width 和 height 中包含 padding(内边距) 和 border(边框)。</p><p>如果在元素上设置了 <code>box-sizing: border-box;</code> 则 padding(内边距) 和 border(边框) 也包含在 width 和 height 中。</p><p>border-box 更直观，也正是很多开发人员需要的效果。所有元素使用 box-sizing 是比较推荐的：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	box-sizing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">border-box</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,18)]))}const E=i(p,[["render",h]]);export{b as __pageData,E as default};
